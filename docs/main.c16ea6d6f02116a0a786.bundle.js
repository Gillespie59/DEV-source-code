webpackJsonp([0,5],Array(32).concat([function(n,t,e){"use strict";var r=e(0),o=e(58);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(){this.title="app",this.PR=window.PR}return n.prototype.randomID=function(){return Math.round(19999*Math.random()+1)},n.prototype.ngAfterViewChecked=function(){this.PR.prettyPrint()},n.prototype.CallToggleMenuBurger=function(){this.header.ToggleMenuBurgerMain()},n}();i([e.i(r.ViewChild)(o.a),a("design:type","function"==typeof(l=void 0!==o.a&&o.a)&&l||Object)],s.prototype,"header",void 0),s=i([e.i(r.Component)({selector:"app-root",template:e(221),styles:[e(184)]})],s);var l},,,,,,,,,,,,,,,,,,,,,,,,,,function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){this.menuMobile=!1}return n.prototype.ToggleMenuBurger=function(){this.menuMobile?this.menuMobile=!1:this.menuMobile||(this.menuMobile=!0)},n.prototype.ToggleMenuBurgerMain=function(){this.menuMobile&&(this.menuMobile=!1)},n}();i=o([e.i(r.Component)({selector:"app-header",template:e(223),styles:[e(186)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){this.groups=[]}return n.prototype.addGroup=function(n){this.groups.push(n)},n.prototype.closeOthers=function(n){this.groups.forEach(function(t){t!==n&&(t.isOpen=!1)})},n.prototype.closeAll=function(n){this.groups.forEach(function(n){n.isOpen=!1})},n.prototype.removeGroup=function(n){var t=this.groups.indexOf(n);-1!==t&&this.groups.splice(t,1)},n}();i=o([e.i(r.Component)({selector:"c3m-menu",template:e(225),styles:[e(188)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){this.groups=[]}return n.prototype.addGroup=function(n){this.groups.push(n)},n.prototype.closeOthers=function(n){this.groups.forEach(function(t){t!==n&&(t.isOpen=!1)})},n.prototype.closeAll=function(n){this.groups.forEach(function(n){n.isOpen=!1})},n.prototype.removeGroup=function(n){var t=this.groups.indexOf(n);-1!==t&&this.groups.splice(t,1)},n}();i=o([e.i(r.Component)({selector:"c3m-accordion",template:e(228),styles:[e(191)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){this.sizeLi=0,this.groups=[]}return n.prototype.ngAfterViewInit=function(){this.tabItemContent=document.querySelectorAll(".carousel-item-content");for(var n=0;n<this.tabItemContent.length;n++)this.sizeLi=this.sizeLi+this.tabItemContent[n].getBoundingClientRect().width;for(var n=0;n<this.tabItemContent.length;n++)this.tabItemContent[n].style.opacity="0";this.tabItemContent[0].style.opacity="1"},n.prototype.ngOnInit=function(){this.groups.forEach(function(n){n.isVisible=!1,n.tabIndex="-1"}),this.groups[0].isVisible=!0,this.groups[0].tabIndex="0"},n.prototype.addGroup=function(n){this.groups.push(n)},n.prototype.next=function(n){var t=this,e=this.groups.indexOf(n),r=this.groups.length;if(this.groups.forEach(function(n){n.isVisible=!1,n.tabIndex="-1"}),e+1>r-1){this.groups[0].isVisible=!0,this.groups[0].tabIndex="0";for(var o=0;o<this.tabItemContent.length;o++)this.tabItemContent[o].style.opacity="0";this.tabItemContent[r-1].style.opacity="1",this.tabItemContent[0].style.transition="none",this.tabItemContent[0].style.transform="translate(+"+this.tabItemContent[0].getBoundingClientRect().width+"px, 0)",this.tabItemContent[r-1].style.transform="translate(-"+this.tabItemContent[r-1].getBoundingClientRect().width+"px, 0)",setTimeout(function(){t.tabItemContent[0].style.opacity="1",t.tabItemContent[0].style.transition="transform 0.3s",t.tabItemContent[0].style.zIndex="10",t.tabItemContent[0].style.transform="translate(0,0)"},0)}else{this.groups[e+1].isVisible=!0,this.groups[e+1].tabIndex="0";for(var o=0;o<this.tabItemContent.length;o++)this.tabItemContent[o].style.opacity="0";this.tabItemContent[e].style.opacity="1",this.tabItemContent[e+1].style.transition="none",this.tabItemContent[e+1].style.transform="translate(+"+this.tabItemContent[e+1].getBoundingClientRect().width+"px, 0)",this.tabItemContent[e].style.transform="translate(-"+this.tabItemContent[e].getBoundingClientRect().width+"px, 0)",setTimeout(function(){t.tabItemContent[e+1].style.opacity="1",t.tabItemContent[e+1].style.transition="transform 0.3s",t.tabItemContent[e+1].style.zIndex="10",t.tabItemContent[e+1].style.transform="translate(0,0)"},0)}},n.prototype.previous=function(n){var t=this,e=this.groups.indexOf(n),r=this.groups.length;if(this.groups.forEach(function(n){n.isVisible=!1,n.tabIndex="-1"}),e-1<0){this.groups[r-1].isVisible=!0,this.groups[r-1].tabIndex="0";for(var o=0;o<this.tabItemContent.length;o++)this.tabItemContent[o].style.opacity="0";this.tabItemContent[0].style.opacity="1",this.tabItemContent[r-1].style.transition="none",this.tabItemContent[r-1].style.transform="translate(-"+this.tabItemContent[r-1].getBoundingClientRect().width+"px, 0)",this.tabItemContent[0].style.transform="translate(+"+this.tabItemContent[0].getBoundingClientRect().width+"px, 0)",setTimeout(function(){t.tabItemContent[r-1].style.opacity="1",t.tabItemContent[r-1].style.transition="transform 0.3s",t.tabItemContent[r-1].style.zIndex="10",t.tabItemContent[r-1].style.transform="translate(0,0)"},0)}else this.groups[e-1].isVisible=!0,this.groups[e-1].tabIndex="0",this.tabItemContent[e].style.opacity="1",this.tabItemContent[e-1].style.transition="none",this.tabItemContent[e-1].style.transform="translate(-"+this.tabItemContent[e-1].getBoundingClientRect().width+"px, 0)",this.tabItemContent[e].style.transform="translate(+"+this.tabItemContent[e].getBoundingClientRect().width+"px, 0)",setTimeout(function(){t.tabItemContent[e-1].style.opacity="1",t.tabItemContent[e-1].style.transition="transform 0.3s",t.tabItemContent[e-1].style.zIndex="10",t.tabItemContent[e-1].style.transform="translate(0,0)"},0)},n.prototype.goTo=function(n,t){var e=this,r=Math.floor(2*Math.random()+0);if(console.log(r),this.groups.forEach(function(n){n.isVisible=!1,n.tabIndex="-1"}),this.groups[n].isVisible=!0,this.groups[n].tabIndex="0",this.tabItemContent[n].style.transition="none",1===r){this.tabItemContent[n].style.transform="translate(+"+this.tabItemContent[n].getBoundingClientRect().width+"px, 0)";for(var o=0;o<this.tabItemContent.length;o++)this.tabItemContent[o].style.transform="translate(-"+this.tabItemContent[o].getBoundingClientRect().width+"px, 0)"}else if(0===r){this.tabItemContent[n].style.transform="translate(-"+this.tabItemContent[n].getBoundingClientRect().width+"px, 0)";for(var o=0;o<this.tabItemContent.length;o++)this.tabItemContent[o].style.transform="translate(+"+this.tabItemContent[o].getBoundingClientRect().width+"px, 0)"}setTimeout(function(){e.tabItemContent[n].style.opacity="1",e.tabItemContent[n].style.transition="transform 0.3s",e.tabItemContent[n].style.zIndex="10",e.tabItemContent[n].style.transform="translate(0,0)"},300)},n}();i=o([e.i(r.Component)({selector:"c3m-carousel",template:e(236),styles:[e(199)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){this.dialogTitle="dialogTitle",this.dialogDescription="dialogDescription",this.btnCloseLabel="Fermer la fenÃªtre de dialogue"}return n.prototype.ngOnInit=function(){this.isOpen=!1},n.prototype.ToggleOpen=function(){this.isOpen?this.isOpen&&(this.isOpen=!1):this.isOpen=!0},n.prototype.OnKey=function(n){console.log(n)},n}();o([e.i(r.Input)(),i("design:type",Boolean)],a.prototype,"isOpen",void 0),a=o([e.i(r.Component)({selector:"c3m-modal",template:e(241),styles:[e(204)],encapsulation:r.ViewEncapsulation.None})],a)},function(n,t,e){"use strict";var r=e(0),o=e(64);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(n){this.navbar=n,this.items=[],n.addTab(this)}return n.prototype.addTab=function(n){this.items.push(n)},n.prototype.openDropdown=function(){!0===this.isOpen?this.navbar.closeAllDropdown():(this.navbar.closeAllDropdown(),this.isOpen=!0)},n}();i([e.i(r.Input)(),a("design:type",Object)],s.prototype,"isOpen",void 0),i([e.i(r.Input)(),a("design:type",Object)],s.prototype,"name",void 0),s=i([e.i(r.Component)({selector:"c3m-dropdown",template:e(244),styles:[e(207)],encapsulation:r.ViewEncapsulation.None}),a("design:paramtypes",["function"==typeof(l=void 0!==o.a&&o.a)&&l||Object])],s);var l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(n){this.cdr=n,this.dropdowns=[],this.sizeInit=0,this.isOpen=!1}return n.prototype.onResize=function(n){this.itemsElement.last.nativeElement.offsetTop>this.itemsElement.first.nativeElement.offsetTop?(this.itemsElement.last.nativeElement.offsetTop>this.itemsElement.first.nativeElement.offsetTop&&!0!==this.isOver&&(this.widthBreak=n.target.innerWidth,this.isOver=!0),this.widthBreak?n.target.innerWidth>this.widthBreak&&!0===this.isOver&&(this.isOver=!1):(this.widthBreak=this.sizeInit,n.target.innerWidth>=this.widthBreak&&(this.isOver=!1))):this.isOver=!1,this.cdr.detectChanges()},n.prototype.toggleBurger=function(){!0===this.isOpen?this.isOpen=!1:!1===this.isOpen&&(this.isOpen=!0)},n.prototype.ngAfterViewInit=function(){this.itemsElement.last.nativeElement.offsetTop>this.itemsElement.first.nativeElement.offsetTop?(this.itemsElement.last.nativeElement.offsetTop>this.itemsElement.first.nativeElement.offsetTop&&!0!==this.isOver&&(this.widthBreak=window.innerWidth,this.isOver=!0),this.widthBreak?window.innerWidth>this.widthBreak&&!0===this.isOver&&(this.isOver=!1):(this.widthBreak=this.sizeInit,window.innerWidth>=this.widthBreak&&(this.isOver=!1))):this.isOver=!1,this.cdr.detectChanges()},n.prototype.closeAllDropdown=function(){this.dropdowns.forEach(function(n){n.isOpen=!1})},n.prototype.addTab=function(n){this.dropdowns.push(n)},n}();o([e.i(r.ViewChildren)("navItems"),i("design:type","function"==typeof(s=void 0!==r.QueryList&&r.QueryList)&&s||Object)],a.prototype,"itemsElement",void 0),o([e.i(r.HostListener)("window:resize",["$event"]),i("design:type",Function),i("design:paramtypes",[Object]),i("design:returntype",void 0)],a.prototype,"onResize",null),a=o([e.i(r.Component)({selector:"c3m-navbar",template:e(245),styles:[e(208)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",["function"==typeof(l=void 0!==r.ChangeDetectorRef&&r.ChangeDetectorRef)&&l||Object])],a);var s,l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){}return n.prototype.getPager=function(n,t,e){void 0===t&&(t=1),void 0===e&&(e=10);var r,o,i=Math.ceil(n/e);i<=10?(r=1,o=i):t<=6?(r=1,o=10):t+4>=i?(r=i-9,o=i):(r=t-5,o=t+4);for(var a=(t-1)*e,s=Math.min(a+e-1,n-1),l=[],c=r;c<o+1;c++)l.push(c);return{totalItems:n,currentPage:t,pageSize:e,totalPages:i,startPage:r,endPage:o,startIndex:a,endIndex:s,pages:l}},n}();i=o([e.i(r.Injectable)()],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(n){this.cdr=n,this.tabs=[],this.sizeInit=0,this.arrayTmp=[],this.startIndexActiv=0}return n.prototype.onResize=function(n){this.tabsElement.last.nativeElement.offsetTop>this.tabsElement.first.nativeElement.offsetTop?(this.tabsElement.last.nativeElement.offsetTop>this.tabsElement.first.nativeElement.offsetTop&&!0!==this.isOver&&(this.widthBreak=n.target.innerWidth,this.isOver=!0),this.widthBreak?n.target.innerWidth>this.widthBreak&&!0===this.isOver&&(this.isOver=!1):(this.widthBreak=this.sizeInit,n.target.innerWidth>=this.widthBreak&&(this.isOver=!1))):this.isOver=!1,this.cdr.detectChanges()},n.prototype.addTab=function(n){this.tabs.length===this.startIndexActiv&&(n.isActive=!0),this.tabs.push(n)},n.prototype.selectTab=function(n){this.tabs.forEach(function(n){n.isActive=!1}),n.isActive=!0},n.prototype.ngAfterViewInit=function(){this.arrayTmp=this.tabsElement.toArray();for(var n=0;n<this.arrayTmp.length-1;n++)this.sizeInit=this.arrayTmp[n].nativeElement.clientWidth+this.sizeInit;this.tabsElement.last.nativeElement.offsetTop!==this.tabsElement.first.nativeElement.offsetTop?this.isOver=!0:this.isOver=!1,this.cdr.detectChanges()},n}();o([e.i(r.ViewChildren)("tabs"),i("design:type","function"==typeof(s=void 0!==r.QueryList&&r.QueryList)&&s||Object)],a.prototype,"tabsElement",void 0),o([e.i(r.HostListener)("window:resize",["$event"]),i("design:type",Function),i("design:paramtypes",[Object]),i("design:returntype",void 0)],a.prototype,"onResize",null),a=o([e.i(r.Component)({selector:"c3m-tabs",template:e(256),styles:[e(219)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",["function"==typeof(l=void 0!==r.ChangeDetectorRef&&r.ChangeDetectorRef)&&l||Object])],a);var s,l},,,,,,,,,,,,,,,,,,,,,,,,,,,function(n,t){function e(n){throw new Error("Cannot find module '"+n+"'.")}e.keys=function(){return[]},e.resolve=e,n.exports=e,e.id=93},function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=e(0),o=e(100),i=e(102);e(130).a.production&&e.i(r.enableProdMode)(),e.i(o.a)().bootstrapModule(i.a)},,,,,,,,function(n,t,e){"use strict";var r=e(24),o=e(57),i=e(0),a=e(32),s=e(183),l=(e.n(s),e(58)),c=e(103),p=e(115),d=e(107),m=e(60),u=e(106),x=e(101),g=e(110),b=e(66),h=e(129),f=e(111),C=e(128),v=e(105),y=e(59),w=e(104),I=e(108),E=e(109),O=e(112),T=e(117),k=e(62),R=e(116),P=e(61),A=e(113),N=e(126),B=e(124),S=e(127),j=e(125),D=e(120),V=e(121),L=e(65),M=e(118),_=e(64),G=e(63),z=e(119),F=e(122),U=e(123),H=e(114);e.d(t,"a",function(){return q});var W=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},K=[{path:"accueil",component:d.a,data:{title:"Accueil"}},{path:"button",component:f.a,data:{title:"Button"}},{path:"tabs",component:C.a,data:{title:"Tabs"}},{path:"accordion",component:v.a,data:{title:"Accordion"}},{path:"modal",component:T.a,data:{title:"modal"}},{path:"carousel",component:O.a,data:{title:"carousel"}},{path:"table",component:N.a,data:{title:"table"}},{path:"pagination",component:D.a,data:{title:"pagination"}},{path:"navbar",component:M.a,data:{title:"navbar"}},{path:"slider",component:F.a,data:{title:"slider"}},{path:"gettingStarted",component:H.a,data:{title:"gettingStarted"}},{path:"",redirectTo:"/accueil",pathMatch:"full"}],q=function(){function n(){}return n}();q=W([e.i(i.NgModule)({declarations:[a.a,l.a,c.a,p.a,d.a,m.a,u.a,g.a,b.a,h.a,f.a,C.a,v.a,y.a,w.a,I.a,E.a,O.a,T.a,k.a,R.a,P.a,A.a,N.a,B.a,S.a,j.a,D.a,V.a,M.a,_.a,G.a,z.a,F.a,U.a,H.a],imports:[r.a,o.a,s.ScrollToModule.forRoot(),x.a.forRoot(K)],schemas:[i.NO_ERRORS_SCHEMA],exports:[x.a],providers:[L.a],bootstrap:[a.a]})],q)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"app-footer",template:e(222),styles:[e(185)]}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0),o=e(59);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(n){this.menu=n,this.menu.addGroup(this)}return n.prototype.ngOnDestroy=function(){this.menu.removeGroup(this)},n.prototype.ngOnChanges=function(n){for(var t in n)if(n.hasOwnProperty(t)){var e=n[t];e.isFirstChange()||this.menu.groups[this.index+1].toggleOpen()}},n.prototype.ngOnInit=function(){this.tabID="tab"+this.index,this.panelID="panel"+this.index},n.prototype.ngAfterViewInit=function(){this.tabID="tab"+this.index,this.panelID="panel"+this.index},n.prototype.toggleOpen=function(){this.isOpen?this.isOpen&&this.menu.closeAll(this):(this.isOpen=!0,this.menu.closeOthers(this))},n}();i([e.i(r.Input)(),a("design:type",String)],s.prototype,"nameButton",void 0),i([e.i(r.Input)(),a("design:type",String)],s.prototype,"urlImage",void 0),i([e.i(r.Input)(),a("design:type",Boolean)],s.prototype,"isOpen",void 0),i([e.i(r.Input)(),a("design:type",Number)],s.prototype,"index",void 0),s=i([e.i(r.Component)({selector:"c3m-menu-item",template:e(224),styles:[e(187)],encapsulation:r.ViewEncapsulation.None}),a("design:paramtypes",["function"==typeof(l=void 0!==o.a&&o.a)&&l||Object])],s);var l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){}return n}();i=o([e.i(r.Component)({selector:"c3m-accordion-page",template:e(226),styles:[e(189)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0),o=e(60);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(n){this.accordion=n,this.accordion.addGroup(this)}return n.prototype.ngOnDestroy=function(){this.accordion.removeGroup(this)},n.prototype.ngOnChanges=function(n){for(var t in n)if(n.hasOwnProperty(t)){var e=n[t];e.isFirstChange()||this.accordion.groups[this.index+1].toggleOpen()}},n.prototype.ngOnInit=function(){this.tabID="tab"+this.index,this.panelID="panel"+this.index},n.prototype.ngAfterViewInit=function(){this.tabID="tab"+this.index,this.panelID="panel"+this.index},n.prototype.toggleOpen=function(){this.isOpen?this.isOpen&&this.accordion.closeAll(this):(this.isOpen=!0,this.accordion.closeOthers(this))},n}();i([e.i(r.Input)(),a("design:type",String)],s.prototype,"nameButton",void 0),i([e.i(r.Input)(),a("design:type",String)],s.prototype,"urlImage",void 0),i([e.i(r.Input)(),a("design:type",Boolean)],s.prototype,"isOpen",void 0),i([e.i(r.Input)(),a("design:type",Number)],s.prototype,"index",void 0),s=i([e.i(r.Component)({selector:"c3m-accordion-item",template:e(227),styles:[e(190)],encapsulation:r.ViewEncapsulation.None}),a("design:paramtypes",["function"==typeof(l=void 0!==o.a&&o.a)&&l||Object])],s);var l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"app-accueil",template:e(229),styles:[e(192)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){}return n.prototype.onChange=function(n){this.files=n},n}();i=o([e.i(r.Component)({selector:"c3m-btn-file",template:e(230),styles:[e(193)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n}();o([e.i(r.Input)(),i("design:type",String)],a.prototype,"inputValue",void 0),a=o([e.i(r.Component)({selector:"c3m-btn-submit",template:e(231),styles:[e(194)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(n){this.elementRef=n}return n.prototype.OnClick=function(){alert("My Class is : "+this.elementRef.nativeElement.className)},n}();a=o([e.i(r.Component)({selector:"c3m-btn",template:e(232),styles:[e(195)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",["function"==typeof(s=void 0!==r.ElementRef&&r.ElementRef)&&s||Object])],a);var s},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){}return n}();i=o([e.i(r.Component)({selector:"app-button-page",template:e(233),styles:[e(196)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-carousel-page",template:e(234),styles:[e(197)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0),o=e(61);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(n){this.carousel=n,this.isVisible=!0,this.tabIndex="-1",this.carousel.addGroup(this)}return n.prototype.ngOnInit=function(){this.itemID="item"+this.index},n.prototype.ngAfterViewInit=function(){this.itemID="item"+this.index},n.prototype.previousSlide=function(){this.carousel.previous(this)},n.prototype.nextSlide=function(){this.carousel.next(this)},n}();i([e.i(r.Input)(),a("design:type",Object)],s.prototype,"isVisible",void 0),i([e.i(r.Input)(),a("design:type",Number)],s.prototype,"index",void 0),i([e.i(r.Input)(),a("design:type",Object)],s.prototype,"tabIndex",void 0),i([e.i(r.Input)(),a("design:type",String)],s.prototype,"itemID",void 0),s=i([e.i(r.Component)({selector:"c3m-carousel-item",template:e(235),styles:[e(198)],encapsulation:r.ViewEncapsulation.None}),a("design:paramtypes",["function"==typeof(l=void 0!==o.a&&o.a)&&l||Object])],s);var l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-getting-started",template:e(237),styles:[e(200)]}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n}();a=o([e.i(r.Component)({selector:"app-main",template:e(238),styles:[e(201)]}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-modal-alert",template:e(239),styles:[e(202)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0),o=e(62);e.d(t,"a",function(){return s});var i=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},a=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},s=function(){function n(){}return n.prototype.ngOnInit=function(){},n.prototype.OpenModal=function(){this.modal.ToggleOpen()},n}();i([e.i(r.ViewChild)(o.a),a("design:type","function"==typeof(l=void 0!==o.a&&o.a)&&l||Object)],s.prototype,"modal",void 0),s=i([e.i(r.Component)({selector:"c3m-modal-page",template:e(240),styles:[e(203)],encapsulation:r.ViewEncapsulation.None}),a("design:paramtypes",[])],s);var l},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-navbar-page",template:e(242),styles:[e(205)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0),o=e(63),i=e(32);e.d(t,"a",function(){return l});var a=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},s=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},l=function(){function n(n,t){n.addTab(this),this.idItem=t.randomID()}return n}();a([e.i(r.Input)(),s("design:type",Object)],l.prototype,"name",void 0),a([e.i(r.Input)(),s("design:type",Number)],l.prototype,"idItem",void 0),a([e.i(r.Input)(),s("design:type",Object)],l.prototype,"route",void 0),l=a([e.i(r.Component)({selector:"c3m-dropdown-item",template:e(243),styles:[e(206)],encapsulation:r.ViewEncapsulation.None}),s("design:paramtypes",["function"==typeof(c=void 0!==o.a&&o.a)&&c||Object,"function"==typeof(p=void 0!==i.a&&i.a)&&p||Object])],l);var c,p},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-pagination-page",template:e(246),styles:[e(209)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0),o=e(57),i=e(261),a=(e.n(i),e(65));e.d(t,"a",function(){return c});var s=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},l=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},c=function(){function n(n,t){this.http=n,this.pagerService=t,this.pager={}}return n.prototype.ngOnInit=function(){var n=this;this.http.get("assets/json/dataPagination.json").map(function(n){return n.json()}).subscribe(function(t){n.allItems=t,n.setPage(1)})},n.prototype.setPage=function(n){n<1||n>this.pager.totalPages||(this.pager=this.pagerService.getPager(this.allItems.length,n),this.pagedItems=this.allItems.slice(this.pager.startIndex,this.pager.endIndex+1))},n}();c=s([e.i(r.Component)({selector:"c3m-pagination",template:e(247),styles:[e(210)],encapsulation:r.ViewEncapsulation.None}),l("design:paramtypes",["function"==typeof(p=void 0!==o.b&&o.b)&&p||Object,"function"==typeof(d=void 0!==a.a&&a.a)&&d||Object])],c);var p,d},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-slider-page",template:e(248),styles:[e(211)]}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(n){this.myComponent=n,this.offset=0}return n.prototype.ngAfterViewInit=function(){console.log(this.value),this.isBubble=this.myComponent.nativeElement.classList.contains("bubble"),this.isBubble&&this.setPositionBubble()},n.prototype.onResize=function(n){this.isBubble&&this.setPositionBubble()},n.prototype.showValue=function(){this.isBubble&&this.setPositionBubble(),this.output.nativeElement.innerHTML=this.input.nativeElement.value},n.prototype.setPositionBubble=function(){this.width=this.input.nativeElement.getBoundingClientRect().width,this.point=(this.input.nativeElement.value-this.min)/(this.max-this.min),this.point<.5?this.offset=2*this.point*-12+12:this.point>.5&&(this.offset=2*(this.point-.5)*-12),this.newPoint=this.width*this.point,this.output.nativeElement.style.left=this.newPoint+this.offset+"px"},n}();o([e.i(r.Input)(),i("design:type",Object)],a.prototype,"min",void 0),o([e.i(r.Input)(),i("design:type",Object)],a.prototype,"max",void 0),o([e.i(r.Input)(),i("design:type",Object)],a.prototype,"step",void 0),o([e.i(r.Input)(),i("design:type",Object)],a.prototype,"value",void 0),o([e.i(r.Input)(),i("design:type",Object)],a.prototype,"title",void 0),o([e.i(r.ViewChild)("slider"),i("design:type","function"==typeof(s=void 0!==r.ElementRef&&r.ElementRef)&&s||Object)],a.prototype,"input",void 0),o([e.i(r.ViewChild)("output"),i("design:type","function"==typeof(l=void 0!==r.ElementRef&&r.ElementRef)&&l||Object)],a.prototype,"output",void 0),o([e.i(r.HostListener)("window:resize",["$event"]),i("design:type",Function),i("design:paramtypes",[Object]),i("design:returntype",void 0)],a.prototype,"onResize",null),a=o([e.i(r.Component)({selector:"c3m-slider",template:e(249),styles:[e(212)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",["function"==typeof(c=void 0!==r.ElementRef&&r.ElementRef)&&c||Object])],a);var s,l,c},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngAfterViewInit=function(){for(var n=document.querySelectorAll("thead th"),t=[],e=0;e<n.length;e++)t.push(n[e].innerHTML);for(var r=document.querySelectorAll("tbody tr"),o=0;o<r.length;o++)for(var i=r[o].querySelectorAll("td"),a=0;a<i.length;a++){var s=document.createElement("strong"),l=document.createTextNode(t[a]);s.appendChild(l),i[a].insertBefore(s,i[a].childNodes[0])}},n}();a=o([e.i(r.Component)({selector:"c3m-column-table",template:e(250),styles:[e(213)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-page-swipe-table",template:e(251),styles:[e(214)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-table-page",template:e(252),styles:[e(215)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return a});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},a=function(){function n(){}return n.prototype.ngOnInit=function(){},n}();a=o([e.i(r.Component)({selector:"c3m-toggle-table",template:e(253),styles:[e(216)],encapsulation:r.ViewEncapsulation.None}),i("design:paramtypes",[])],a)},function(n,t,e){"use strict";var r=e(0);e.d(t,"a",function(){return i});var o=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},i=function(){function n(){}return n}();i=o([e.i(r.Component)({selector:"app-tabs-page",template:e(254),styles:[e(217)],encapsulation:r.ViewEncapsulation.None})],i)},function(n,t,e){"use strict";var r=e(0),o=e(66),i=e(32);e.d(t,"a",function(){return l});var a=this&&this.__decorate||function(n,t,e,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(n,t,e,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(a=(i<3?o(a):i>3?o(t,e,a):o(t,e))||a);return i>3&&a&&Object.defineProperty(t,e,a),a},s=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},l=function(){function n(n,t){n.addTab(this),this.idTab=t.randomID()}return n.prototype.ngOnInit=function(){this.tabID="tab"+this.idTab,this.panelID="panel"+this.idTab},n.prototype.ngAfterViewInit=function(){this.tabID="tab"+this.idTab,this.panelID="panel"+this.idTab},n}();a([e.i(r.Input)(),s("design:type",Object)],l.prototype,"tabTitle",void 0),a([e.i(r.Input)(),s("design:type",Boolean)],l.prototype,"isActive",void 0),a([e.i(r.Input)(),s("design:type",Number)],l.prototype,"idTab",void 0),l=a([e.i(r.Component)({selector:"c3m-tab",template:e(255),styles:[e(218)],encapsulation:r.ViewEncapsulation.None}),s("design:paramtypes",["function"==typeof(c=void 0!==o.a&&o.a)&&c||Object,"function"==typeof(p=void 0!==i.a&&i.a)&&p||Object])],l);var c,p},function(n,t,e){"use strict";e.d(t,"a",function(){return r});var r={production:!0}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(n,t){n.exports=""},function(n,t){n.exports=".footerContent{background-color:hsla(0,2%,74%,.63);height:2.4rem;margin-left:0;color:#5d5b5b}.footerContent p{font:.8rem robotolight;line-height:2.4rem;float:right;margin-right:3rem;font-weight:700}.footerContent p span{font-weight:400}@media screen and (min-width:850px){.footerContent p{font-size:1rem}}"},function(n,t){n.exports="c3m-menu{display:block;width:75%;height:100%;position:fixed;z-index:999;box-shadow:0 2px 5px 0 rgba(0,0,0,.3);background-color:#fff;overflow:hidden;left:-700px;transition:left .6s;margin-top:5em}.mobileOpen{left:0}.mobileClose,.mobileOpen{transition:left .6s}header{position:fixed;top:0;display:block;height:5rem;width:100%;z-index:999;background-color:#005b8e}header img.logoAngular{height:100%;float:right;margin-right:.5rem}header a{margin-left:2rem;margin-top:1rem;display:inline-block;width:11rem}header a>img{min-width:100%}header a>h1{display:inline-block;color:#fff;line-height:4rem;font-size:1.6rem;margin-left:1rem}header img.logoWorldline{height:100%;float:left;display:none}header button{height:1.4rem;width:1.5rem;display:inline-block;background-color:initial;margin-left:1.1rem;margin-top:1.8rem;cursor:pointer}.burgerVertical,header button{transition:-webkit-transform .7s;transition:transform .7s;transition:transform .7s,-webkit-transform .7s}.burgerVertical{-webkit-transform:rotate(90deg);transform:rotate(90deg)}header button>img{height:100%;width:100%}@media screen and (min-width:850px){header img.logoWorldline{display:inline-block}header button{display:none}header a{margin-left:1rem}c3m-menu{display:inline-block;width:24.5%;left:0}.mobileClose,.mobileOpen{left:0}header{background-image:linear-gradient(90deg,#06a,#77bcea)}}@media screen and (min-width:1300px){c3m-menu{width:17.5%}}"},function(n,t){n.exports=".menu-group.closed>.panel-collapse{display:none}c3m-menu-item>li{color:#000;border-bottom:2px solid hsla(0,0%,93%,.84)}c3m-menu-item>li:hover>button{background-color:hsla(0,0%,93%,.84)}c3m-menu-item>li>button{font-size:1rem;height:100%;width:100%;line-height:1.7rem;background-color:initial;text-align:left;color:#929191;padding:1rem;cursor:pointer}c3m-menu-item.help>li>button{color:#1a79b8}c3m-menu-item>li>button img{height:1.7rem;margin-right:.7rem}.contenuMenu li{padding:0 0 .4rem 1rem;font:1rem robotolight}.contenuMenu li:first-child{margin-top:.5rem}.contenuMenu li>a{padding:.6rem 0 .6rem 1rem;font-size:.9rem;background-color:initial;display:block;width:80%;text-align:left;cursor:pointer}.contenuMenu li>a:focus{background-color:dimgrey;color:#fff}.contenuMenu li>a:hover{background-color:#9f9f9f;color:#fff}"},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports='c3m-accordion>ul{width:50%;box-shadow:0 7px 5px -4px rgba(50,50,50,.62);margin-bottom:1.5rem}c3m-accordion-item>li{border:none;position:relative;z-index:5;background-color:#535353}c3m-accordion-item>li.closed{border-bottom:1px solid #fff}c3m-accordion-item:last-child>li.closed{border:none}c3m-accordion-item>li.closed>.panel-collapse{display:none}c3m-accordion-item>li:before{content:" ";width:40px;height:40px;display:block;background:url(https://creamng.github.io/Library/assets/img/arrow-down-bold_white.svg) no-repeat;-webkit-transform:rotate(-180deg);transform:rotate(-180deg);z-index:1;transition:all .3s;position:absolute;right:0}c3m-accordion-item>li.closed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}c3m-accordion-item>li>button{height:100%;width:100%;line-height:1.7rem;text-align:left;color:#fff;background-color:initial;background-size:2.1rem;padding:.5rem 2.5rem .5rem .5rem;cursor:pointer;z-index:10;position:relative}c3m-accordion .panel-collapse{padding:1.5rem;color:#fff;background-color:#9f9f9f}'},function(n,t){n.exports=""},function(n,t){n.exports="main{display:block}.firstBlock{position:relative;overflow:hidden;height:23rem;box-shadow:6px 0 14px 1px rgba(50,50,50,.62)}.firstBlock img{margin-top:-30.2rem}.firstBlock p{font:1.2rem robotobold;top:55.2%;background-color:#fff;color:#1b7ab9;width:70%}.firstBlock>h2,.firstBlock p{padding-left:2rem;position:absolute;padding:.5rem;left:8.1%;border-radius:5px;text-align:center}.firstBlock>h2{font:2.3rem robotoblack;top:30.2%;background-color:#1b7ab9;color:#fff}.whyNgCream>h2{padding:2rem;font-size:1.6rem;font-family:robotobold;color:rgba(58,58,58,.83)}.whyNgCream{display:block;padding-top:1rem}.whyNgCream h2{display:block;text-align:center;font-size:2rem;padding:2rem 0}.whyNgCream p{width:90%;margin:0 auto;text-align:center;margin-bottom:1rem}.whyNgCream p>small{font:1rem robotolight;display:block;margin:0 auto;width:50%;text-align:center;margin-bottom:2rem}.ngCreamBecause{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;text-align:center;margin:0 auto;padding-top:1rem;background-color:#f5f5f5;padding-bottom:3rem}.ngCreamBecause li{margin:0 auto;margin-bottom:2rem}.ngCreamBecause li img{height:5.9rem}.ngCreamBecause li h3{font:1.1rem robotoregular;text-transform:uppercase;margin-top:.6rem;margin-bottom:.8rem;font-weight:700}.ngCreamBecause li p{display:block;margin:0 auto;width:70%;font:1rem robotolight;line-height:1.5rem}.ngCreamBecause li p strong{font-weight:700}@media screen and (min-width:450px){.ngCreamBecause li{width:50%}}@media screen and (min-width:600px){.firstBlock p{font:1.6rem robotobold}.firstBlock>h2{font:2.6rem robotoblack}}@media screen and (min-width:1100px){.firstBlock p{width:auto}}@media screen and (min-width:850px){.ngCreamBecause li{width:33%}}"},function(n,t){n.exports="c3m-btn-file label{color:#fff;padding:.5rem 1rem;border-radius:3px;background:#696969;cursor:pointer;margin-bottom:1.6rem}c3m-btn-file label:hover{opacity:.8}c3m-btn-file input[type=file]{position:absolute;left:-9999px}c3m-btn-file ul li{font-family:Robotoitalic;color:#676767;margin-top:.3rem}c3m-btn-file ul li:first-child{margin-top:1rem}"},function(n,t){n.exports="c3m-btn-submit input{color:#fff;padding:.5rem 1rem;border-radius:3px;background:#696969;cursor:pointer;border:none;font-size:1rem;font-family:Robotoregular}c3m-btn-submit input:hover{opacity:.8}"},function(n,t){n.exports="c3m-btn button{color:#fff;padding:.5rem 1rem;border-radius:3px;background:#696969;cursor:pointer;margin-bottom:1.6rem}c3m-btn button:hover{opacity:.8}c3m-btn.success button{background-color:green}c3m-btn.info button{background-color:#1773b2}c3m-btn.warning button{background-color:orange}c3m-btn.danger button{background-color:#ff4500}"},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports='c3m-carousel .carousel{position:relative;overflow:hidden}c3m-carousel .carouselItemList{overflow:hidden;margin:0 auto;display:block;width:100%;height:20rem}c3m-carousel .bulletpoint{display:block;margin:0 auto;text-align:center;width:100%;position:absolute;z-index:17;bottom:5%}c3m-carousel .bulletpoint li{height:1.2rem;width:1.2rem;background-color:#c7c4c4;display:inline-block;margin-right:1rem;border-radius:50%}c3m-carousel .bulletpoint li:hover{opacity:.8}c3m-carousel .bulletpoint li button{height:100%;width:100%;background-color:initial;cursor:pointer}c3m-carousel .bulletpoint li[aria-selected=true]{background-color:#fff}c3m-carousel .previousCarouselItem:before{border-left:4px solid #fff;-webkit-transform:rotate(45deg);transform:rotate(45deg);left:50%}c3m-carousel .nextCarouselItem:before,c3m-carousel .previousCarouselItem:before{display:block;width:1rem;height:1rem;content:"";border-bottom:4px solid #fff;position:absolute;top:1rem}c3m-carousel .nextCarouselItem:before{border-right:4px solid #fff;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:50%}c3m-carousel .carousel-item{display:inline-block;height:20rem;width:100%}c3m-carousel .nextCarouselItem:hover,c3m-carousel .previousCarouselItem:hover{opacity:.8}c3m-carousel .carousel-item-content{display:block;width:100%;background-color:#2f2c2c;height:calc(100% - 3.4rem);margin:0 auto;position:absolute;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;left:0;top:3.4rem}c3m-carousel .carousel-item-content p{display:block;padding-top:5.2rem;color:#fff;font-size:4rem;text-align:center}c3m-carousel .previousCarouselItem{position:absolute;top:0;display:inline-block;width:50%;height:3.4rem;left:0;cursor:pointer;background-color:#716e6e}c3m-carousel .nextCarouselItem[tabindex="-1"],c3m-carousel .previousCarouselItem[tabindex="-1"]{z-index:0;opacity:0}c3m-carousel .nextCarouselItem[tabindex="0"],c3m-carousel .previousCarouselItem[tabindex="0"]{z-index:15}c3m-carousel .nextCarouselItem{position:absolute;top:0;display:inline-block;width:50%;height:3.4rem;left:50%;cursor:pointer;background-color:#716e6e}@media (min-width:850px){c3m-carousel .previousCarouselItem:before{width:2rem;height:2rem;top:45%;left:39.7%}c3m-carousel .nextCarouselItem:before{width:2rem;height:2rem;top:45%;right:39.7%}c3m-carousel .previousCarouselItem{width:11.5%;height:100%;font-size:3.5rem;display:inline-block;left:0}c3m-carousel .carouselItemList{width:75%}c3m-carousel .nextCarouselItem{width:11.5%;height:100%;font-size:3.5rem;display:inline-block;right:0;left:auto}c3m-carousel .carousel-item-content{display:block;margin:0 auto;position:absolute;height:100%;left:0;top:0}c3m-carousel .carousel-item-content p{padding-top:6rem}c3m-carousel .bulletpoint{bottom:1rem}c3m-carousel .bulletpoint li{background-color:#c7c4c4}}'},function(n,t){n.exports=".HowInstallAngular{background-color:hsla(0,0%,63%,.38)}.HowInstallAngular h2{display:block;font-size:2rem;padding:2rem 0 1rem;font-family:robotobold;color:rgba(58,58,58,.83);margin-left:2rem}.HowInstallAngular p{display:block;margin-bottom:1rem;margin-left:2rem}.HowInstallAngular p small{font:1rem robotolight;display:block;width:90%;margin-bottom:2rem}.HowInstallAngular p a{text-decoration:underline;color:#4490da}.HowInstallAngular p span{display:block;margin-top:.1rem}.HowInstallAngular p strong{font-family:robotobold;color:#4490da}.HowInstallAngular p em{font:1rem robotoitalic;color:#4490da}.HowInstallAngular pre{display:block}.HowInstallAngular pre code{padding:.3rem .5rem;border-radius:3px;background-color:#fff;display:inline-block;margin-left:-1.8rem;white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word}.HowInstallAngular ul{list-style:disc;margin-left:4rem;margin-bottom:.9rem}@media screen and (max-width:600px){.HowInstallAngular pre code{width:80%}}"},function(n,t){n.exports=".contentMain{background-color:hsla(0,0%,95%,.72);height:100%;padding-top:5rem}@media screen and (min-width:850px){.contentMain{margin-left:24.6%}}@media screen and (min-width:1300px){.contentMain{margin-left:17.5%}}"},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports=".dialog[aria-hidden=true]{display:none}.dialog-overlay{z-index:10;background-color:hsla(0,3%,6%,.84);position:fixed;top:0;left:0;bottom:0;right:0}.dialog-content{background-color:#fff;z-index:15;position:fixed;top:40%;left:25%;padding:2em;width:50%;border-radius:2px}.dialog[aria-hidden=false] .dialog-content{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:test;animation-name:test}@-webkit-keyframes test{0%{opacity:0;top:0}to{opacity:1;top:40%}}@keyframes test{0%{opacity:0;top:0}to{opacity:1;top:40%}}.dialog h1{margin-bottom:1.5rem;font-size:2rem}.dialog p{font-size:1.2rem;margin-bottom:1.5rem}.dialog-close{position:absolute;top:.5em;right:.5em;border:0;padding:0;background-color:transparent;font-weight:700;font-size:1.25em;width:1.2em;height:1.2em;text-align:center;cursor:pointer;transition:.15s}.dialog input{border-radius:2px;border:1px solid gray;height:1.4rem;width:90%;min-width:10em}.dialog label{font-family:robotoitalic;margin-right:1rem}@media screen and (min-width:700px){.dialog-close{top:1em;right:1em}}"},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports='c3m-navbar nav{background-color:#545454;padding:.9rem 1.1rem;position:relative;margin-bottom:2.2rem}c3m-navbar .navbarItems{display:inline-block;line-height:2.6rem;transition:left .5s}c3m-navbar .navbarItems a{color:#fff}c3m-navbar .navbarItems a:hover{text-decoration:underline}c3m-navbar .navbarItems>li{display:inline-block;padding:0 1.5rem;color:#fff}c3m-navbar .logo{height:2.6rem}c3m-navbar .containerDemo,c3m-navbar .logo{display:inline-block}c3m-navbar .containerDemo.over{width:100%;height:15.3rem;position:absolute;top:100%;left:0;overflow:hidden}c3m-navbar .navbarItems.over{position:absolute;top:0;left:-100%;background-color:#8c8e8c}c3m-navbar .navbarItems.over.isOpen{left:0}c3m-navbar .navbarItems.over li{display:block}c3m-navbar .logo.over{position:absolute;left:50%}c3m-dropdown[type=bottom] ul{position:absolute;top:100%;background-color:#789;padding:.5rem;-webkit-transform:scale(0);transform:scale(0);transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s}c3m-dropdown[type=bottom] ul.isOpen{-webkit-transform:scale(1);transform:scale(1)}c3m-dropdown>button{background:initial;color:#fff;cursor:pointer}c3m-dropdown>button:after{content:"";width:1rem;height:1rem;display:inline-block;vertical-align:sub;margin-left:.3rem;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;background:url(assets/img/arrow-down-bold_white.svg) no-repeat 100%}c3m-dropdown>button.isOpen:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}c3m-dropdown>button:hover{font-weight:700}.navbarItems.over c3m-dropdown .dropdownContent li{font:1rem robotoitalic;margin:.6rem 0}.navbarItems.over c3m-dropdown .dropdownContent a{color:#3e3d3d}.navbarItems.over c3m-dropdown[type=bottom] ul{position:static;background-color:initial;top:100%;padding:0;-webkit-transform:scale(0);transform:scale(0);transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;height:0}.navbarItems.over c3m-dropdown[type=bottom] ul.isOpen{-webkit-transform:scale(1);transform:scale(1);height:auto}c3m-navbar .burgerbtn{width:1.8rem;background-color:initial;display:none;height:2.4rem;cursor:pointer;transition:-webkit-transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s}c3m-navbar .burgerbtn.over{display:inline-block}c3m-navbar .burgerbtn.over.isOpen{-webkit-transform:rotate(90deg);transform:rotate(90deg)}c3m-navbar.fixed-top nav{position:fixed;top:0;left:0;width:100%}c3m-navbar nav .skip{position:absolute;left:-9999px}'},function(n,t){n.exports=""},function(n,t){n.exports="c3m-pagination .paginationContainer{padding:.5rem}c3m-pagination .paginationItems{display:block;text-align:center}c3m-pagination .paginationItems li{color:#3e3535;font:1rem robotoitalic}c3m-pagination .pagination{margin-top:2rem;text-align:center}c3m-pagination .pagination li{background-color:#423d3d;width:1.7rem;display:inline-block;height:1.7rem;margin-right:.3rem;margin-bottom:.6rem}c3m-pagination .pagination li.active{background-color:#7a7579}c3m-pagination .pagination button{background-color:initial;height:100%;width:100%;color:#fff;cursor:pointer}c3m-pagination .pagination button img{width:80%;height:80%;margin:0 auto;display:block}c3m-pagination .pagination li:hover{background-color:#635e5e}c3m-pagination .pagination li.disabled{background-color:#615d5d}c3m-pagination .pagination li.disabled button{pointer-events:none}@media screen and (min-width:850px){c3m-pagination .pagination li{width:2.1rem;height:2.1rem}}@media screen and (min-width:1000px){c3m-pagination .pagination li{width:2.4rem;height:2.4rem}}@media screen and (min-width:1300px){c3m-pagination .paginationContainer{width:50%}}"},function(n,t){n.exports=""},function(n,t){n.exports='c3m-slider input[type=range]{-webkit-appearance:none;width:30%;margin:8.8px 0;display:inline-block}c3m-slider input[type=range]:focus{outline:none}c3m-slider input[type=range]::-webkit-slider-runnable-track{width:100%;height:8.4px;cursor:pointer;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;background:#bdbdbd;border-radius:1.3px;border:.2px solid #010101}c3m-slider input[type=range]::-webkit-slider-thumb{box-shadow:0 0 0 rgba(0,0,0,.63),0 0 0 hsla(0,0%,5%,.63);border:1px solid rgba(0,0,0,.28);height:26px;width:26px;border-radius:12px;background:hsla(0,0%,41%,.97);cursor:pointer;-webkit-appearance:none;margin-top:-9px}c3m-slider input[type=range]:focus::-webkit-slider-runnable-track{background:#c2c2c2}c3m-slider input[type=range]::-moz-range-track{width:100%;height:8.4px;cursor:pointer;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;background:#bdbdbd;border-radius:1.3px;border:.2px solid #010101}c3m-slider input[type=range]::-moz-range-thumb{box-shadow:0 0 0 rgba(0,0,0,.63),0 0 0 hsla(0,0%,5%,.63);border:1px solid rgba(0,0,0,.28);height:26px;width:26px;border-radius:12px;background:hsla(0,0%,41%,.97);cursor:pointer}input[type=range]::-ms-track{width:100%;height:8.4px;cursor:pointer;background:transparent;border-color:transparent;color:transparent}c3m-slider input[type=range]::-ms-fill-lower{background:#b8b8b8;border:.2px solid #010101;border-radius:2.6px;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d}c3m-slider input[type=range]::-ms-fill-upper{background:#bdbdbd;border:.2px solid #010101;border-radius:2.6px;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d}c3m-slider input[type=range]::-ms-thumb{box-shadow:0 0 0 rgba(0,0,0,.63),0 0 0 hsla(0,0%,5%,.63);border:1px solid rgba(0,0,0,.28);height:26px;width:26px;border-radius:12px;background:hsla(0,0%,41%,.97);cursor:pointer;height:8.4px}c3m-slider input[type=range]:focus::-ms-fill-lower{background:#bdbdbd}c3m-slider input[type=range]:focus::-ms-fill-upper{background:#c2c2c2}c3m-slider label{display:block;margin:.6rem 0;font-size:1.1rem;text-transform:uppercase;color:#5d5555}c3m-slider output{display:inline;position:static;font:1.3rem rotoboregular;margin-left:.9rem;vertical-align:middle;text-transform:uppercase}c3m-slider.bubble output{position:absolute;background-color:dimgray;width:40px;height:30px;text-align:center;color:#fff;border-radius:10px;display:inline-block;bottom:-2.7rem;left:0;margin-left:0;-webkit-transform:translate(-50%);transform:translate(-50%)}c3m-slider.bubble output:after{content:"";position:absolute;width:0;height:0;border-bottom:10px solid dimgray;border-left:5px solid transparent;border-right:5px solid transparent;bottom:100%;left:50%;margin-left:-5px;margin-top:-1px}c3m-slider .SliderContent{position:relative;margin-bottom:3rem}'},function(n,t){n.exports="c3m-column-table table{text-align:left;border:1px solid #fff;width:75%}c3m-column-table caption{font:1.3rem robotoregular;margin-bottom:.6rem;color:#1b1b1f;text-align:left}c3m-column-table thead th{color:#fff;background-color:#696969;padding:1rem .4rem;border:1px solid #423e3e}c3m-column-table tbody td{color:#000;background-color:#fff;padding:1rem .4rem;border:1px solid #423e3e}c3m-column-table tbody strong{display:none}c3m-column-table tfoot td{color:#fff;background-color:#565658;padding:1rem .4rem;border:1px solid #423e3e}@media screen and (max-width:1000px){c3m-column-table table{border:none;padding:.5rem;border-radius:3px;background-color:#fff}c3m-column-table table,c3m-column-table tbody{width:100%;display:block}c3m-column-table thead{display:none}c3m-column-table tbody tr{display:block;width:100%;margin-bottom:1.9rem}c3m-column-table tbody tr td{display:block;width:100%;color:#353232;background-color:initial;padding:.3rem .4rem;border:none;border-bottom:1px solid #b1abab8a}c3m-column-table tbody strong{display:inline-block;color:#696969;width:30%;font-weight:700;font-size:1.1rem}c3m-column-table tbody span{display:inline-block;width:60%}c3m-column-table caption{display:block;width:100%;font-size:1.5rem;color:#1385c5}}"},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports=""},function(n,t){n.exports="c3m-tabs.presentationTabV>div>ul>li{margin-right:.3rem;background-color:rgba(43,43,43,.31)}c3m-tabs.presentationTabV>div>ul>li>a{color:#fff;font:.9rem robotolight;padding:.5rem .6rem}c3m-tabs.presentationTabV>div>ul>li.active{background-color:#545454}c3m-tabs.presentationTabV>div div.content[aria-hidden=false]{background-color:#545454;padding-top:1.1rem;font:.9rem robotolight;color:#fff}c3m-tabs.presentationTabV>div{margin-bottom:2.5rem;width:90%}c3m-tabs.presentationTabV>div>ul button{color:#fff}@media screen and (min-width:850px){c3m-tabs.presentationTabV>div{margin-bottom:2.5rem}c3m-tabs.presentationTabV>div>ul>li>a,c3m-tabs.presentationTabV>div div.content[aria-hidden=false]{font-size:1rem}}"},function(n,t){n.exports=""},function(n,t){n.exports='.tabsContainer{background-color:transparent;margin-top:2rem;box-shadow:0 7px 5px -4px rgba(50,50,50,.62)}.tabsContainer ul>li{display:inline-block;text-align:center;cursor:pointer;background-color:#bdbdbd;margin-right:.4rem}.tabsContainer>ul>li.active{background-color:#f5f5f5}.tabsContainer>ul>li button{padding:.5rem 1.3rem;width:100%;background-color:initial;color:#000;cursor:pointer;font:1.1rem"robotolight"}c3m-tab .content[aria-hidden=false]{padding:1rem;background-color:#f5f5f5;padding-top:2.2rem;font:1rem robotolight}c3m-tab .content[aria-hidden=true]{display:none}.tabsContainer ul>li.over{display:block;width:100%;border-bottom:1px solid #fff}@media screen and (min-width:850px){.tabsContainer>ul>li{font-size:1.2rem}}'},,function(n,t){n.exports='<app-header></app-header>\n  <app-main (click)="CallToggleMenuBurger()">\n    <router-outlet></router-outlet>\n  </app-main>\n<app-footer></app-footer>\n\n\n\x3c!-- FOR PRETTIFY:\n\n\n REPLACE\n           {     by   &#123;\n           }     by   &#125;\n           <     by   &#x3C;\n           >     by   &#x3E;\n           "     by   &#x22;\n\n--\x3e'},function(n,t){n.exports='<div class="footerContent">\n  <p> CREAM NG, <span>Copyright Â© 2017</span>, Studio - Worldline </p>\n</div>\n'},function(n,t){n.exports='\x3c!-- Header --\x3e\n<header>\n  <button [ngClass]="{burgerVertical: menuMobile, burgerHorizontal: !menuMobile}" (click)="ToggleMenuBurger()"><img src="assets/img/burger.svg" alt="bouton mobile"/></button>\n  <a href="#">\n    <img src="assets/img/creamNG-logo.svg" alt=" Logo CREAM NG"/>\n  </a>\n    <a href="https://github.com/CreamNG/tastecreamng" class="github-corner" target="_blank" aria-label="Fork us on Github">\n        <svg width="80" height="80" viewBox="0 0 250 250" style="fill:#24292e; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true">\n            <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path>\n            <path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path>\n            <path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path>\n        </svg>\n    </a>\n</header>\n\n\n\x3c!-- Nav --\x3e\n<nav>\n    <c3m-menu [ngClass]="{mobileOpen: menuMobile, mobileClose: !menuMobile}">\n\n        <c3m-menu-item nameButton="Help" class="help" urlImage="assets/img/help-box.svg" [index]=0 [isOpen]=false>\n            <ul class="contenuMenu">\n                <li (click)="ToggleMenuBurger()"><a routerLink="/gettingStarted" routerLinkActive="active"> Getting Started </a></li>\n            </ul>\n        </c3m-menu-item>\n\n        <c3m-menu-item nameButton="Form Element" urlImage="assets/img/formElement.svg" [index]=1 [isOpen]=false>\n            <ul class="contenuMenu">\n                <li (click)="ToggleMenuBurger()"><a routerLink="/button" routerLinkActive="active"> Buttons </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/slider" routerLinkActive="active"> Slider </a></li>\n            </ul>\n        </c3m-menu-item>\n\n        <c3m-menu-item nameButton="Rich Components" urlImage="assets/img/richElement.svg" [index]=1 [isOpen]=false>\n            <ul class="contenuMenu">\n                <li (click)="ToggleMenuBurger()"><a routerLink="/tabs" routerLinkActive="active"> Tabs </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/accordion" routerLinkActive="active">  Accordion </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/carousel" routerLinkActive="active"> Carousel </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/modal" routerLinkActive="active">  Modal </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/table" routerLinkActive="active">  Table </a></li>\n                <li (click)="ToggleMenuBurger()"><a routerLink="/pagination" routerLinkActive="active">  Pagination </a></li>\n            </ul>\n        </c3m-menu-item>\n\n        <c3m-menu-item nameButton="Blocks" urlImage="assets/img/page-layout-header.svg" [index]=2 [isOpen]=false>\n            <ul class="contenuMenu">\n                <li (click)="ToggleMenuBurger()"><a routerLink="/navbar" routerLinkActive="active"> Navbar </a></li>\n            </ul>\n        </c3m-menu-item>\n    </c3m-menu>\n</nav>\n\n'},function(n,t){n.exports='<li class="menu-group" [ngClass]="{\'closed\': !isOpen}">\n\n  <button class="panel-heading" (click)="toggleOpen()" [attr.aria-expanded]="isOpen" [attr.aria-controls]="panelID" id={{tabID}}>\n      <img src= {{urlImage}} alt="icone"/> {{nameButton}}\n  </button>\n\n  <div class="panel-collapse" [attr.aria-hidden]="!isOpen" id={{panelID}} [attr.aria-labeledby]="tabID">\n      <ng-content></ng-content>\n  </div>\n\n</li>\n\n'},function(n,t){n.exports='<ul class="accordion">\n  <ng-content></ng-content>\n</ul>\n'},function(n,t){n.exports='\n\x3c!-- TITLE TABS COMPONENT PAGE --\x3e\n<div class="panelTitle">\n  <h2> <strong> Accordion </strong> Component </h2>\n  <ul>\n    <li><a scrollTo href="nrmAccordion">Normal Accordion</a></li>\n  </ul>\n</div>\n\n\n\x3c!-- DESCRIPTION ACCORDION COMPONENT PAGE --\x3e\n<div class="titleComponent">\n  <div class="descriptionComponent" id="nrmAccordion">\n    <h3> Normal Accordion <a href="https://github.com/CreamNG/Components/tree/master/accordion" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> Its\' a accordion divided into 2 components: one for the container (AccordionComponent) and the other for the content (AccordionItemComponent). </p>\n\n\n    \x3c!-- ACCORDION DEMO --\x3e\n    <c3m-accordion>\n\n      <c3m-accordion-item nameButton="Title1" [index]=0 [isOpen]=false>\n        Content 1\n      </c3m-accordion-item>\n\n\n      <c3m-accordion-item nameButton="Title 2" [index]=1 [isOpen]=false>\n       Content 2\n      </c3m-accordion-item>\n\n      <c3m-accordion-item nameButton="Title3" [index]=2 [isOpen]=false>\n        Content 3\n      </c3m-accordion-item>\n\n\n      <c3m-accordion-item nameButton="Title 4" [index]=3 [isOpen]=false>\n        Content 4\n      </c3m-accordion-item>\n\n    </c3m-accordion>\n\n\n\n    <p> This component is accessible and semantic. It\'s the same component that used for the menu of this website.\n      If you want a tab to open when the page loads, edit "isOpen" to "true"</p>\n\n\n\n    \x3c!-- TABS SNIPPETS --\x3e\n    <c3m-tabs>\n      <c3m-tab tabTitle="HTML">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n          \x3c!--?prettify lang=html linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n              <code>\n                      &#x3C;c3m-accordion&#x3E;\n                          &#x3C;c3m-accordion-item nameButton=&#x22;Title1&#x22;  [index]=0 [isOpen]=false&#x3E;\n                            Content 1\n                          &#x3C;/c3m-accordion-item&#x3E;\n                          &#x3C;c3m-accordion-item nameButton=&#x22;Title 2&#x22;  [index]=1 [isOpen]=false&#x3E;\n                           Content 2\n                          &#x3C;/c3m-accordion-item&#x3E;\n                          &#x3C;c3m-accordion-item nameButton=&#x22;Title3&#x22;  [index]=2 [isOpen]=false&#x3E;\n                            Content 3\n                          &#x3C;/c3m-accordion-item&#x3E;\n                          &#x3C;c3m-accordion-item nameButton=&#x22;Title 4&#x22;  [index]=3 [isOpen]=false&#x3E;\n                            Content 4\n                          &#x3C;/c3m-accordion-item&#x3E;\n                    &#x3C;/c3m-accordion&#x3E;\n              </code>\n            </pre>\n        </div>\n\n        <p class="pre-code"> For <strong>accordion.component.html</strong></p>\n        <div class="code">\n          \x3c!--?prettify lang=html linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n              <code>\n                      &#x3C;ul class=&#x22;accordion&#x22;&#x3E;\n                           &#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;\n                      &#x3C;/ul&#x3E;\n              </code>\n            </pre>\n        </div>\n\n        <p class="pre-code"> For <strong>accordion-item.component.html</strong></p>\n        <div class="code">\n          \x3c!--?prettify lang=html linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n              <code>\n                     &#x3C;li class=&#x22;accordion-group&#x22; [ngClass]=&#x22; &#123; &#x27;closed&#x27;: !isOpen &#125; &#x22;&#x3E;\n\n                      &#x3C;button class=&#x22;panel-heading&#x22; (click)=&#x22;toggleOpen()&#x22; [attr.aria-expanded]=&#x22;isOpen&#x22; [attr.aria-controls]=&#x22;panelID&#x22; id=&#123; &#123;tabID&#125; &#125; &#x3E;\n                           &#123; &#123;nameButton&#125; &#125;\n                      &#x3C;/button&#x3E;\n\n                      &#x3C;div class=&#x22;panel-collapse&#x22; [attr.aria-hidden]=&#x22;!isOpen&#x22; id=&#123; &#123;panelID&#125; &#125; [attr.aria-labeledby]=&#x22;tabID&#x22; &#x3E;\n                          &#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;\n                      &#x3C;/div&#x3E;\n\n                    &#x3C;/li&#x3E;\n              </code>\n            </pre>\n        </div>\n\n\n\n      </c3m-tab>\n      <c3m-tab tabTitle="CSS">\n        <p class="pre-code"> To call the component <strong>(accordion-item-component.css)</strong> </p>\n        <div class="code">\n          \x3c!--?prettify lang=css linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n              <code>\n\n                   c3m-accordion &#x3E; ul &#123;\n                        width: 50%;\n                        box-shadow: 0px 7px 5px -4px rgba(50, 50, 50, 0.62);\n                        margin-bottom: 1.5rem;\n                    &#125;\n                        c3m-accordion-item &#x3E; li &#123;\n                            border:none;\n                            position:relative;\n                            z-index: 5;\n                            background-color: #535353;\n                        &#125;\n                            c3m-accordion-item &#x3E; li.closed &#123;\n                                border-bottom: 1px solid white;\n                            &#125;\n                            c3m-accordion-item:last-child &#x3E; li.closed &#123;\n                                border:none;\n                            &#125;\n                                c3m-accordion-item &#x3E; li.closed &#x3E; .panel-collapse &#123;\n                                    display: none;\n                                &#125;\n                                c3m-accordion-item &#x3E; li::before &#123;\n                                     content: &#x22; &#x22;;\n                                     width: 40px;\n                                     height: 40px;\n                                     display: block;\n                                     background: url(https://creamng.github.io/Library/assets/img/arrow-down-bold_white.svg) no-repeat;\n                                     position: absolute;\n                                     transform: rotate(-180deg);\n                                     z-index: 1;\n                                     transition: all 0.3s;\n                                     position: absolute;\n                                     right: 0;\n                                 &#125;\n                                c3m-accordion-item &#x3E; li.closed:before &#123;\n                                    transform: rotate(0deg);\n                                &#125;\n                                c3m-accordion-item &#x3E; li &#x3E; button &#123;\n                                    height: 100%;\n                                    width: 100%;\n                                    line-height: 1.7rem;\n                                    text-align: left;\n                                    color: white;\n                                    background-color: initial;\n                                    background-size: 2.1rem;\n                                    padding: 0.5rem 2.5rem 0.5rem 0.5rem;\n                                    cursor: pointer;\n                                    z-index: 10;\n                                    position: relative;\n                                &#125;\n                                c3m-accordion .panel-collapse &#123;\n                                    padding: 1.5rem;\n                                    color:white;\n                                    background-color: #9F9F9F;\n                                &#125;\n\n              </code>\n            </pre>\n        </div>\n\n      </c3m-tab>\n      <c3m-tab tabTitle="TypeScript">\n        <p class="pre-code">For <strong>accordion.component.ts</strong></p>\n        <div class="code">\n          \x3c!--?prettify lang=js linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                  <code>\n                        import &#123; Component, ViewEncapsulation &#125; from \'@angular/core\';\n                        import &#123; AccordionItemComponent &#125; from \'./accordion-item/accordion-item.component\';\n\n                        @Component(&#123;\n                          selector: \'c3m-accordion\',\n                          templateUrl: \'./accordion.component.html\',\n                          styleUrls: [\'./accordion.component.css\'],\n                          encapsulation: ViewEncapsulation.None\n                        &#125;)\n                        export class AccordionComponent &#123;\n\n                          groups: Array&#x3C;AccordionItemComponent&#x3E; = [];\n\n                          addGroup(group: AccordionItemComponent): void &#123;\n                            this.groups.push(group);\n                          &#125;\n\n                          closeOthers(openGroup: AccordionItemComponent): void &#123;\n                            this.groups.forEach((group: AccordionItemComponent) => &#123;\n                              if (group !== openGroup) &#123;\n                                group.isOpen = false;\n                              &#125;\n                            &#125;);\n                          &#125;\n\n                          closeAll(openGroup: AccordionItemComponent): void &#123;\n                            this.groups.forEach((group: AccordionItemComponent) => &#123;\n                                group.isOpen = false;\n                            &#125;);\n                          &#125;\n\n                          removeGroup(group: AccordionItemComponent): void &#123;\n                            const index = this.groups.indexOf(group);\n                            if (index !== -1) &#123;\n                              this.groups.splice(index, 1);\n                            &#125;\n                          &#125;\n                        &#125;\n                </code>\n              </pre>\n        </div>\n\n        <p class="pre-code">For <strong>accordion-item.component.ts</strong></p>\n        <div class="code">\n          \x3c!--?prettify lang=js linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                  <code>\n                        import &#123; Component, ViewEncapsulation, Input, OnChanges, SimpleChanges, OnDestroy, AfterViewInit, OnInit &#125; from &#x27;@angular/core&#x27;;\n                        import &#123; AccordionComponent &#125; from &#x27;../accordion.component&#x27;;\n\n                        @Component(&#123;\n                          selector: &#x27;c3m-accordion-item&#x27;,\n                          templateUrl: &#x27;./accordion-item.component.html&#x27;,\n                          styleUrls: [&#x27;./accordion-item.component.css&#x27;],\n                          encapsulation: ViewEncapsulation.None\n                        &#125;)\n                        export class AccordionItemComponent implements OnDestroy, OnChanges, AfterViewInit, OnInit &#123;\n\n                          @Input() nameButton: string;\n                          @Input() urlImage: string;\n                          @Input() isOpen: boolean;\n                          @Input() index: number;\n                          tabID: string;\n                          panelID: string;\n\n                          /* By default , add item to accordion */\n                          constructor(private accordion: AccordionComponent) &#123;\n                            this.accordion.addGroup(this);\n                          &#125;\n\n                          /* remove item to accordion*/\n                          ngOnDestroy() &#123;\n                            this.accordion.removeGroup(this);\n                          &#125;\n\n                          /* changes */\n                          ngOnChanges(changes: SimpleChanges) &#123;\n                            for (const change in changes) &#123;\n                              if (changes.hasOwnProperty(change)) &#123;\n                                const changedProp = changes[change];\n\n                                if (!changedProp.isFirstChange()) &#123;\n                                  this.accordion.groups[this.index + 1].toggleOpen();\n                                &#125;\n                              &#125;\n                            &#125;\n                          &#125;\n\n                          /* initialisation */\n                          ngOnInit() &#123;\n                            this.tabID = &#x27;tab&#x27; + this.index;\n                            this.panelID = &#x27;panel&#x27; + this.index;\n                          &#125;\n\n                          /* when view init */\n                          ngAfterViewInit() &#123;\n                            this.tabID = &#x27;tab&#x27; + this.index;\n                            this.panelID = &#x27;panel&#x27; + this.index;\n                          &#125;\n\n\n                          /* open accordion&#x27;element */\n                          toggleOpen(): void &#123;\n                            if (!this.isOpen) &#123;\n                              this.isOpen = true;\n                              this.accordion.closeOthers(this);\n                            &#125; else if (this.isOpen) &#123;\n                              this.accordion.closeAll(this);\n                            &#125;\n                          &#125;\n                         &#125;\n                </code>\n              </pre>\n        </div>\n\n      </c3m-tab>\n    </c3m-tabs>\n\n  </div>\n\n</div>\n'},function(n,t){n.exports='<li class="accordion-group" [ngClass]="{\'closed\': !isOpen}">\n\n  <button class="panel-heading" (click)="toggleOpen()" [attr.aria-expanded]="isOpen" [attr.aria-controls]="panelID" id={{tabID}}>\n       {{nameButton}}\n  </button>\n\n  <div class="panel-collapse" [attr.aria-hidden]="!isOpen" id={{panelID}} [attr.aria-labeledby]="tabID">\n      <ng-content></ng-content>\n  </div>\n\n</li>\n\n'},function(n,t){n.exports='<ul class="accordion">\n  <ng-content></ng-content>\n</ul>\n'},function(n,t){n.exports='\n    <div class="firstBlock">\n        <img src="assets/img/computer-1185637.jpg" alt="Photo Personne en train de travailler"/>\n        <h2> Cream NG</h2>\n        <p class="accueilMessage">The complete library of accessible and semantic Angular components  </p>\n    </div>\n\n    <div class="whyNgCream">\n        <h2> Why use CreamNG ? </h2>\n        <p>\n            <small> If you are looking for a perfect Angular component library you are in the right place</small>\n            NG Cream is a collection for Angular. All these components are open source and free. NG Cream is developed by the Studio within <a href="#">Worldline.</a>\n        </p>\n    </div>\n\n\n\n    <ul class="ngCreamBecause">\n    <li>\n        <img src="assets/img/language-html5.png" alt="logo html"/>\n        <h3> HTML 5 </h3>\n        <p>Each component has its own code, it is <strong>semantic</strong> and <strong>accessible</strong></p>\n    </li>\n\n    <li>\n        <img src="assets/img/github-circle.png" alt="logo github"/>\n        <h3> open source </h3>\n        <p>All the components are <strong>open source</strong> and free to use with <a href="#">GitLab</a></p>\n    </li>\n          <li>\n        <img src="assets/img/language-css3.png" alt="logo css"/>\n        <h3> CSS 3 </h3>\n        <p>All the latest CSS3 attributes with <strong>compatibility</strong> for each browser</p>\n    </li>\n          <li>\n        <img src="assets/img/share-variant.png" alt="logo de partage"/>\n        <h3> Share with community </h3>\n        <p>You can <strong>send us</strong> your components which will be <strong>tested</strong> before being put online</p>\n    </li>\n          <li>\n        <img src="assets/img/responsive.png" alt="logo responsiv"/>\n        <h3> Responsive Design</h3>\n        <p>All components are <strong>responsive</strong> (smartphone, tablet, desktop, ...)</p>\n    </li>\n                <li>\n        <img src="assets/img/hexagon-multiple.png" alt="logo composants multiple"/>\n        <h3> Accessibility</h3>\n        <p>All the components are <strong>accessible </strong> with Web Content Accessibility Guidelines 2.0 (FR : RGAA)</p>\n    </li>\n\n    </ul>\n'},function(n,t){n.exports='<label for="fileToUpload"><ng-content></ng-content></label>\r\n<input (change)="onChange(file.files)" type="file" name="fileToUpload" #file id="fileToUpload" multiple>\r\n<ul>\r\n    <li *ngFor="let f of files"> {{ f.name }}</li>\r\n\r\n</ul>\r\n\r\n\r\n\r\n'},function(n,t){n.exports='<input type="submit" value="{{ inputValue }}">'},function(n,t){n.exports='<button> \x3c!-- (click)="OnClick()" --\x3e\n    <ng-content></ng-content>\n</button>\n'},function(n,t){n.exports='<div class="panelTitle">\n  <h2> <strong> Button </strong> Component </h2>\n  <ul>\n    <li><a scrollTo href="#normalBtn">Normal</a></li>\n    <li><a scrollTo href="#uploadBtn">Upload</a></li>\n    <li><a scrollTo href="#submitBtn">Submit</a></li>\n  </ul>\n</div>\n\n\n\n\n<div class="titleComponent">\n    \x3c!-- NORMAL BUTTON --\x3e\n    <div class="descriptionComponent" id="normalBtn">\n    <h3> Normal Button <a href="https://github.com/CreamNG/Components/tree/master/buttons/btn" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> It\'s a normal button. </p>\n    <c3m-btn>normal</c3m-btn>\n    <c3m-btn ngClass="info" >info</c3m-btn>\n    <c3m-btn ngClass="warning" >warning</c3m-btn>\n    <c3m-btn ngClass="danger" >danger</c3m-btn>\n    <c3m-btn ngClass="success">success</c3m-btn>\n\n      <c3m-tabs>\n          <c3m-tab tabTitle="HTML">\n              <p class="pre-code"> To call the component </p>\n              <div class="code">\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\n                  <pre class="prettyprint linenums">\n                      <code>\n                            &#x3C;c3m-btn&#x3E;normal&#x3C;/c3m-btn&#x3E;\n                            &#x3C;c3m-btn ngClass=&#x22;info&#x22; &#x3E;info&#x3C;/c3m-btn&#x3E;\n                            &#x3C;c3m-btn ngClass=&#x22;warning&#x22; &#x3E;warning&#x3C;/c3m-btn&#x3E;\n                            &#x3C;c3m-btn ngClass=&#x22;danger&#x22; &#x3E;danger&#x3C;/c3m-btn&#x3E;\n                            &#x3C;c3m-btn ngClass=&#x22;success&#x22;&#x3E;success&#x3C;/c3m-btn&#x3E;\n                      </code>\n                  </pre>\n              </div>\n              <p class="pre-code"> For btn.component.html </p>\n              <div class="code">\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\n                  <pre class="prettyprint linenums">\n                      <code>\n                            &#x3C;button (click)=&#x22;OnClick()&#x22;&#x3E;\n                                &#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;\n                            &#x3C;/button&#x3E;\n                      </code>\n                  </pre>\n              </div>\n\n          </c3m-tab>\n\n          <c3m-tab tabTitle="CSS">\n              <p class="pre-code"> For the buttons </p>\n              <div class="code">\n                  \x3c!--?prettify lang=css linenums=true?--\x3e\n                  <pre class="prettyprint linenums">\n                  <code>\n                          c3m-btn button&#123;\n                            color: white;\n                            padding: 0.5rem 1rem 0.5rem 1rem;\n                            border-radius: 3px;\n                            background: rgb(105, 105, 105);\n                            cursor:pointer;\n                            margin-bottom:1.6rem;\n                          &#125;\n                          c3m-btn button:hover&#123;\n                              opacity:0.8;\n                          &#125;\n                  </code>\n              </pre>\n              </div>\n              <p class="pre-code"> For custom colors </p>\n              <div class="code">\n                  \x3c!--?prettify lang=css linenums=true?--\x3e\n                  <pre class="prettyprint linenums">\n                  <code>\n                     c3m-btn.success button&#123;\n                          background-color: green;\n                      &#125;\n                      c3m-btn.info button&#123;\n                          background-color: #1773B2;\n                      &#125;\n                      c3m-btn.warning button&#123;\n                          background-color: orange;\n                      &#125;\n                      c3m-btn.danger button&#123;\n                          background-color: orangered;\n                      &#125;\n                  </code>\n              </pre>\n              </div>\n\n          </c3m-tab>\n\n          <c3m-tab tabTitle="TypeScript">\n                  <p class="pre-code"> To call the component </p>\n                  <div class="code">\n                      \x3c!--?prettify lang=javascript linenums=true?--\x3e\n                      <pre class="prettyprint linenums">\n                      <code>\n                        import &#123;Component, ViewEncapsulation, ElementRef&#125; from &#x27;@angular/core&#x27;;\n                            @Component(&#123;\n                              selector: &#x27;c3m-btn&#x27;,\n                              templateUrl: &#x27;./btn.component.html&#x27;,\n                              styleUrls: [&#x27;./btn.component.css&#x27;],\n                              encapsulation: ViewEncapsulation.None\n                            &#125;)\n                            export class BtnComponent &#123;\n\n                              constructor(private elementRef: ElementRef) &#123;\n                              &#125;\n\n                              public OnClick() &#123;\n                                alert(&#x27;My Class is : &#x27; + this.elementRef.nativeElement.className);\n                              &#125;\n                            &#125;\n\n                      </code>\n                  </pre>\n                  </div>\n\n          </c3m-tab>\n\n\n      </c3m-tabs>\n  </div>\n\n    \x3c!-- UPLOAD BUTTON --\x3e\n    <div class="descriptionComponent" id="uploadBtn">\n        <h3> Upload Button<a href="https://github.com/CreamNG/Components/tree/master/buttons/btn-file" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a></h3>\n        <p> It\'s a file upload button (multiple files) </p>\n        <c3m-btn-file>Choose a file</c3m-btn-file>\n\n\n        <c3m-tabs>\n            <c3m-tab tabTitle="HTML">\n                <p class="pre-code"> To call the component </p>\n                <div class="code">\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                            &#x3C;c3m-btn-file&#x3E;Choose a file&#x3C;/c3m-btn-file&#x3E;\n                      </code>\n                  </pre>\n                </div>\n\n\n                <p class="pre-code"> For btn-file.component.html </p>\n                <div class="code">\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                            &#x3C;label for=&#x22;fileToUpload&#x22;&#x3E;&#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;&#x3C;/label&#x3E;\n                            &#x3C;input (change)= &#x22; onChange(file.files) &#x22; type= &#x22; file &#x22; name= &#x22; fileToUpload &#x22; #file id= &#x22; fileToUpload &#x22; multiple&#x3E;\n                            &#x3C;em *ngFor=&#x22; let f of files&#x22;&#x3E; &#123; &#123; f.name &#125; &#125; &#x3C;/em&#x3E;\n                     </code>\n                  </pre>\n                </div>\n\n            </c3m-tab>\n\n            <c3m-tab tabTitle="CSS">\n                <p class="pre-code"> For the button</p>\n                <div class="code">\n                    \x3c!--?prettify lang=css linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                         <code>\n                               c3m-btn-file label&#123;\n                                    color: white;\n                                    padding: 0.5rem 1rem 0.5rem 1rem;\n                                    border-radius: 3px;\n                                    background: rgb(105, 105, 105);\n                                    cursor: pointer;\n                                    margin-bottom: 1.6rem;\n                                &#125;\n                                c3m-btn-file label:hover&#123;\n                                    opacity:0.8;\n                                &#125;\n\n                                c3m-btn-file input[type=&#x22;file&#x22;]&#123;\n                                    position:absolute;\n                                    left:-9999px;\n                                &#125;\n\n                                c3m-btn-file ul li &#123;\n                                    font-family: "Robotoitalic";\n                                    color: #676767;\n                                    margin-top: 0.3rem;\n                                &#125;\n                                c3m-btn-file ul li:first-child &#123;\n                                    margin-top: 1rem;\n                                &#125;\n\n                        </code>\n                    </pre>\n                </div>\n\n            </c3m-tab>\n\n            <c3m-tab tabTitle="TypeScript">\n                <p class="pre-code"> To call the component </p>\n                <div class="code">\n                    \x3c!--?prettify lang=javascript linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                        import &#123; Component, ViewEncapsulation &#125; from &#x27;@angular/core&#x27;;\n\n                            @Component(&#123;\n                              selector: &#x27;c3m-btn-file&#x27;,\n                              templateUrl: &#x27;./btn-file.component.html&#x27;,\n                              styleUrls: [&#x27;./btn-file.component.css&#x27;],\n                              encapsulation: ViewEncapsulation.None\n                            &#125;)\n                            export class BtnFileComponent &#123;\n                                files: FileList;\n\n                                onChange(files: FileList) &#123;\n                                    this.files = files;\n                                &#125;\n                            &#125;\n                      </code>\n                  </pre>\n                </div>\n\n            </c3m-tab>\n\n        </c3m-tabs>\n</div>\n\n    \x3c!-- SUBMIT BUTTON --\x3e\n    <div class="descriptionComponent" id="submitBtn">\n\n        <h3> Submit Button <a href="https://github.com/CreamNG/Components/tree/master/buttons/btn-submit" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a></h3>\n        <p> It\'s a file submit button (need a form tag) </p>\n        <c3m-btn-submit inputValue="submit"></c3m-btn-submit>\n\n        <c3m-tabs>\n            <c3m-tab tabTitle="HTML">\n                <p class="pre-code"> To call the component </p>\n                <div class="code">\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                            &#x3C;c3m-btn-submit inputValue=&#x22;submit&#x22;&#x3E;&#x3C;/c3m-btn-submit&#x3E;\n                      </code>\n                  </pre>\n                </div>\n\n\n                <p class="pre-code"> For btn-submit.component.html </p>\n                <div class="code">\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                        &#x3C;input type=&#x22;submit&#x22; value= &#x22; &#123; &#123; inputValue &#125; &#125; &#x22; &#x3E;\n                     </code>\n                  </pre>\n                </div>\n\n            </c3m-tab>\n\n            <c3m-tab tabTitle="CSS">\n                <p class="pre-code"> For the button</p>\n                <div class="code">\n                    \x3c!--?prettify lang=css linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                         <code>\n                            c3m-btn-submit input&#123;\n                                color: white;\n                                padding: 0.5rem 1rem 0.5rem 1rem;\n                                border-radius: 3px;\n                                background: rgb(105, 105, 105);\n                                cursor: pointer;\n                                border: none;\n                                font-size: 1rem;\n                                font-family: &#x22;Robotoregular&#x22;;\n                            &#125;\n                            c3m-btn-submit input:hover&#123;\n                                opacity:0.8;\n                            &#125;\n                        </code>\n                    </pre>\n                </div>\n\n            </c3m-tab>\n\n            <c3m-tab tabTitle="TypeScript">\n                <p class="pre-code"> To call the component </p>\n                <div class="code">\n                    \x3c!--?prettify lang=javascript linenums=true?--\x3e\n                    <pre class="prettyprint linenums">\n                      <code>\n                            import &#123;Component, Input, ViewEncapsulation&#125; from &#x27;@angular/core&#x27;;\n\n                            @Component(&#123;\n                              selector: &#x27;c3m-btn-submit&#x27;,\n                              templateUrl: &#x27;./btn-submit.component.html&#x27;,\n                              styleUrls: [&#x27;./btn-submit.component.css&#x27;],\n                              encapsulation: ViewEncapsulation.None\n                            &#125;)\n                            export class BtnSubmitComponent &#123;\n\n                              constructor() &#123; &#125;\n\n                              @Input() inputValue: string;\n                            &#125;\n                      </code>\n                  </pre>\n                </div>\n\n            </c3m-tab>\n\n        </c3m-tabs>\n    </div>\n</div>'},function(n,t){n.exports='\x3c!-- TITLE CAROUSEL COMPONENT PAGE --\x3e\r\n<div class="panelTitle">\r\n  <h2> <strong> Carousel </strong> Component </h2>\r\n  <ul>\r\n    <li><a scrollTo href="simpleCarousel">Simple Carousel</a></li>\r\n    <li><a href="#">Automatic Carousel</a></li>\r\n    <li><a href="#">Images Carousel</a></li>\r\n  </ul>\r\n</div>\r\n\r\n\x3c!-- DESCRIPTION ACCORDION COMPONENT PAGE --\x3e\r\n<div class="titleComponent">\r\n  <div class="descriptionComponent" id="simpleCarousel">\r\n    <h3> Simple Carousel<a href="https://github.com/CreamNG/Components/tree/master/carousel" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a>  </h3>\r\n    <p> It\'s a carousel with 2 buttons and a list of bullepoints </p>\r\n\r\n\r\n    \x3c!-- CAROUSEL DEMO --\x3e\r\n    <c3m-carousel>\r\n\r\n      <c3m-carousel-item [index]="0">\r\n          <p>Slide 1</p>\r\n      </c3m-carousel-item>\r\n\r\n      <c3m-carousel-item [index]="1">\r\n          <p>Slide 2</p>\r\n      </c3m-carousel-item>\r\n\r\n      <c3m-carousel-item [index]="2">\r\n          <p>Slide 3</p>\r\n      </c3m-carousel-item>\r\n\r\n    </c3m-carousel>\r\n\r\n\r\n    <p> This component is accessible and semantic. He owns two breakpoints. Slides can be browsed with arrow buttons or bullet points</p>\r\n\r\n    \x3c!-- TABS SNIPPETS --\x3e\r\n    <c3m-tabs>\r\n      <c3m-tab tabTitle="HTML">\r\n        <p class="pre-code"> To call the component </p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=html linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n              <code>\r\n                  &#x3C;c3m-carousel&#x3E;\r\n\r\n                    &#x3C;c3m-carousel-item [index]=&#x22;0&#x22;&#x3E;\r\n                        &#x3C;p&#x3E;Slide 1&#x3C;/p&#x3E;\r\n                    &#x3C;/c3m-carousel-item&#x3E;\r\n\r\n                    &#x3C;c3m-carousel-item [index]=&#x22;1&#x22;&#x3E;\r\n                        &#x3C;p&#x3E;Slide 2&#x3C;/p&#x3E;\r\n                    &#x3C;/c3m-carousel-item&#x3E;\r\n\r\n                    &#x3C;c3m-carousel-item [index]=&#x22;2&#x22;&#x3E;\r\n                        &#x3C;p&#x3E;Slide 3&#x3C;/p&#x3E;\r\n                    &#x3C;/c3m-carousel-item&#x3E;\r\n\r\n                  &#x3C;/c3m-carousel&#x3E;\r\n              </code>\r\n            </pre>\r\n        </div>\r\n\r\n        <p class="pre-code"> For <strong>carousel.component.html</strong></p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=html linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n              <code>\r\n                  &#x3C;!-- A Carousel --&#x3E;\r\n                  &#x3C;div class=&#x22;carousel&#x22;&#x3E;\r\n\r\n                      &#x3C;!-- Carousel Item List --&#x3E;\r\n                     &#x3C;ul role=&#x22;tablist&#x22; class=&#x22;carouselItemList&#x22;&#x3E;\r\n                         &#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;\r\n                     &#x3C;/ul&#x3E;\r\n\r\n                      &#x3C;!-- Carousel Bullet Points --&#x3E;\r\n                      &#x3C;ul class=&#x22;bulletpoint&#x22;&#x3E;\r\n                          &#x3C;li *ngFor=&#x22;let groupItem of groups; let i = &#x27;index&#x27; &#x22;\r\n                              [attr.aria-controls]=&#x22;groupItem.itemID &#x22;\r\n                              role=&#x22;tab&#x22;\r\n                              [attr.aria-selected]=&#x22;groupItem.isVisible&#x22;\r\n                              tabindex = &#123; &#123; groupItem.tabIndex &#125; &#125; &#x3E;\r\n\r\n                              &#x3C;button #bulletPoint aria-label=&#x22;Go to this slide&#x22; (click)=&#x22;goTo(i)&#x22;&#x3E; &#x3C;/button&#x3E;\r\n                          &#x3C;/li&#x3E;\r\n                      &#x3C;/ul&#x3E;\r\n\r\n                  &#x3C;/div&#x3E;\r\n              </code>\r\n            </pre>\r\n        </div>\r\n\r\n        <p class="pre-code"> For <strong>carousel-item.component.html</strong></p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=html linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n              <code>\r\n                  &#x3C;!-- A Carousel Item--&#x3E;\r\n                  &#x3C;li class=&#x22;carousel-item &#x22; role= &#x22; tab&#x22; tabindex= &#123; &#123; tabIndex &#125; &#125;  [attr.aria-selected]=&#x22;isVisible&#x22; [attr.aria-controls]=&#x22;itemID&#x22;&#x3E;\r\n                          &#x3C;!-- Previous button --&#x3E;\r\n                          &#x3C;button class=&#x22;previousCarouselItem&#x22; tabindex= &#123; &#123; tabIndex &#125; &#125; (click)=&#x22;previousSlide()&#x22; aria-label=&#x22;Previous slide&#x22;&#x3E;&#x3C;/button&#x3E;\r\n\r\n                          &#x3C;!-- Carousel item Content --&#x3E;\r\n                          &#x3C;div class=&#x22;carousel-item-content&#x22; role=&#x22;tabpanel&#x22; id= &#123; &#123; itemID &#125; &#125; [attr.aria-hidden]=&#x22;!isVisible&#x22;&#x3E;\r\n                              &#x3C;ng-content &#x3E; &#x3C; /ng-content &#x3E;\r\n                          &#x3C;/div&#x3E;\r\n\r\n                          &#x3C;!-- Next Button --&#x3E;\r\n                          &#x3C;button class=&#x22;nextCarouselItem&#x22; tabindex= &#123; &#123; tabIndex &#125; &#125; (click)=&#x22;nextSlide()&#x22; aria-label=&#x22;Next slide&#x22;&#x3E;&#x3C;/button&#x3E;\r\n                  &#x3C;/li&#x3E;\r\n\r\n              </code>\r\n            </pre>\r\n        </div>\r\n      </c3m-tab>\r\n\r\n      <c3m-tab tabTitle="CSS">\r\n        <p class="pre-code"> To call the component <strong>(carousel-component.css)</strong> </p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=css linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n              <code>\r\n\r\n                  c3m-carousel .carousel&#123;\r\n                      position:relative;\r\n                      overflow: hidden;\r\n                  &#125;\r\n\r\n                      c3m-carousel .carouselItemList&#123;\r\n                          overflow:hidden;\r\n                          margin:0 auto;\r\n                          display:block;\r\n                          width:100%;\r\n                          height: 20rem;\r\n                      &#125;\r\n                      /* BULLEPOINTS */\r\n                      c3m-carousel .bulletpoint&#123;\r\n                          display:block;\r\n                          margin: 0 auto;\r\n                          text-align:center;\r\n                          width:100%;\r\n                          position:absolute;\r\n                          z-index:17;\r\n                          bottom: 5%;\r\n                      &#125;\r\n                          c3m-carousel .bulletpoint li &#123;\r\n                              height: 1.2rem;\r\n                              width: 1.2rem;\r\n                              background-color: #c7c4c4;\r\n                              display: inline-block;\r\n                              margin-right: 1rem;\r\n                              border-radius: 50%;\r\n\r\n                          &#125;\r\n                              c3m-carousel .bulletpoint li:hover&#123;\r\n                                  opacity:0.8;\r\n                              &#125;\r\n                                  c3m-carousel .bulletpoint li button&#123;\r\n                                      height: 100%;\r\n                                      width: 100%;\r\n                                      background-color: initial;\r\n                                      cursor: pointer;\r\n                                  &#125;\r\n                                      c3m-carousel .bulletpoint li[aria-selected=&#x22;true&#x22;]&#123;\r\n                                          background-color: white;\r\n                                      &#125;\r\n\r\n\r\n                               /* CONTROLS */\r\n                               c3m-carousel .previousCarouselItem::before &#123;\r\n                                   display: block;\r\n                                   width: 1rem;\r\n                                   height: 1rem;\r\n                                   content: &#x22;&#x22;;\r\n                                   border-bottom: 4px solid white;\r\n                                   border-left: 4px solid white;\r\n                                   transform: rotate(45deg);\r\n                                   position: absolute;\r\n                                   top: 1rem;\r\n                                   left: 50%;\r\n                               &#125;\r\n                                  c3m-carousel .nextCarouselItem::before &#123;\r\n                                      display: block;\r\n                                      width: 1rem;\r\n                                      height: 1rem;\r\n                                      content: &#x22;&#x22;;\r\n                                      border-bottom: 4px solid white;\r\n                                      border-right: 4px solid white;\r\n                                      transform: rotate(-45deg);\r\n                                      position: absolute;\r\n                                      top: 1rem;\r\n                                      right: 50%;\r\n                                  &#125;\r\n                                  c3m-carousel .carousel-item&#123;\r\n                                      display:inline-block;\r\n                                      height: 20rem;\r\n                                      width:100%;\r\n                                  &#125;\r\n\r\n                                      c3m-carousel .previousCarouselItem:hover,\r\n                                      c3m-carousel .nextCarouselItem:hover&#123;\r\n                                          opacity: 0.8;\r\n                                      &#125;\r\n\r\n                                          c3m-carousel .carousel-item-content&#123;\r\n                                              display: block;\r\n                                              width: 100%;\r\n                                              background-color: #2f2c2c;\r\n                                              height: calc(100% - 3.4rem);\r\n                                              margin: 0 auto;\r\n                                              position: absolute;\r\n                                              transition: transform 0.3s;\r\n                                              transition: transform 0.3s, -webkit-transform 0.3s;\r\n                                              left: 0;\r\n                                              top: 3.4rem;\r\n                                          &#125;\r\n                                          c3m-carousel .carousel-item-content p&#123;\r\n                                                  display: block;\r\n                                                  padding-top: 5.2rem;\r\n                                                  color: white;\r\n                                                  font-size: 4rem;\r\n                                                  text-align: center;\r\n                                              &#125;\r\n                                                  c3m-carousel .previousCarouselItem&#123;\r\n                                                      position: absolute;\r\n                                                      top:0;\r\n                                                      display: inline-block;\r\n                                                      width: 50%;\r\n                                                      height: 3.4rem;\r\n                                                      left:0;\r\n                                                      cursor:pointer;\r\n                                                      background-color: #716e6e;\r\n                                                  &#125;\r\n                                                  c3m-carousel .nextCarouselItem[tabindex=&#x22;-1&#x22;],\r\n                                                  c3m-carousel .previousCarouselItem[tabindex=&#x22;-1&#x22;]&#123;\r\n                                                      z-index: 0;\r\n                                                      opacity:0;\r\n                                                  &#125;\r\n                                                  c3m-carousel .nextCarouselItem[tabindex=&#x22;0&#x22;],\r\n                                                  c3m-carousel .previousCarouselItem[tabindex=&#x22;0&#x22;]&#123;\r\n                                                      z-index: 15;\r\n                                                  &#125;\r\n                                                      c3m-carousel .nextCarouselItem&#123;\r\n                                                          position: absolute;\r\n                                                          top:0;\r\n                                                          display: inline-block;\r\n                                                          width: 50%;\r\n                                                          height: 3.4rem;\r\n                                                          left:50%;\r\n                                                          cursor:pointer;\r\n                                                          background-color: #716e6e;\r\n                                                      &#125;\r\n                  /* **** MIN WIN 850 px ***** */\r\n\r\n                  @media (min-width: 850px)&#123;\r\n                      c3m-carousel .previousCarouselItem::before &#123;\r\n                          width: 2rem;\r\n                          height: 2rem;\r\n                          top: 45%;\r\n                          left: 39.7%;\r\n                      &#125;\r\n                          c3m-carousel .nextCarouselItem::before &#123;\r\n                              width: 2rem;\r\n                              height: 2rem;\r\n                              top: 45%;\r\n                              right: 39.7%\r\n                          &#125;\r\n                      c3m-carousel .previousCarouselItem&#123;\r\n                          width: 11.5%;\r\n                          height: 100%;\r\n                          font-size: 3.5rem;\r\n                          display:inline-block;\r\n                          left:0;\r\n                      &#125;\r\n                      c3m-carousel .carouselItemList &#123;\r\n                          width: 75%;\r\n                      &#125;\r\n                      c3m-carousel  .nextCarouselItem&#123;\r\n                          width: 11.5%;\r\n                          height: 100%;\r\n                          font-size: 3.5rem;\r\n                          display:inline-block;\r\n                          right:0;\r\n                          left:auto;\r\n                      &#125;\r\n                      c3m-carousel .carousel-item-content &#123;\r\n                          display: block;\r\n                          margin: 0 auto;\r\n                          position: absolute;\r\n                          height: 100%;\r\n                          left: 0;\r\n                          top: 0;\r\n                      &#125;\r\n                      c3m-carousel .carousel-item-content p &#123;\r\n                          padding-top: 6rem;\r\n                      &#125;\r\n                      c3m-carousel .bulletpoint&#123;\r\n                          bottom:1rem;\r\n                      &#125;\r\n                      c3m-carousel .bulletpoint li &#123;\r\n                          background-color: #c7c4c4;\r\n                      &#125;\r\n\r\n                  &#125;\r\n              </code>\r\n            </pre>\r\n        </div>\r\n      </c3m-tab>\r\n\r\n\r\n      <c3m-tab tabTitle="TypeScript">\r\n        <p class="pre-code">For <strong>carousel.component.ts</strong></p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=js linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                  <code>\r\n                       import &#123;Component, ViewEncapsulation, OnInit, ElementRef, QueryList, ViewChildren, AfterViewInit&#125; from &#x27;@angular/core&#x27;;\r\n                        import &#123; CarouselItemComponent&#125; from &#x27;./carousel-item/carousel-item.component&#x27;;\r\n\r\n                        @Component(&#123;\r\n                          selector: &#x27;c3m-carousel&#x27;,\r\n                          templateUrl: &#x27;./carousel.component.html&#x27;,\r\n                          styleUrls: [&#x27;./carousel.component.css&#x27;],\r\n                          encapsulation: ViewEncapsulation.None\r\n                        &#125;)\r\n                        export class CarouselComponent implements OnInit, AfterViewInit &#123;\r\n\r\n                          sizeLi = 0;\r\n                          public tabItemContent;\r\n                          groups: Array&#x3C;CarouselItemComponent&#x3E; = [];\r\n\r\n                          // After View Init\r\n                          ngAfterViewInit() &#123;\r\n\r\n                              // Select All Carousel Item Content\r\n                              this.tabItemContent = document.querySelectorAll(&#x27;.carousel-item-content&#x27;);\r\n\r\n                              // Calcul Size of all Carousel Item\r\n                              for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                  this.sizeLi = this.sizeLi + this.tabItemContent[i].getBoundingClientRect().width;\r\n                              &#125;\r\n\r\n                              // Opacity 0 for All Carousel Item\r\n                              for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                  this.tabItemContent[i].style.opacity = &#x27;0&#x27;;\r\n                              &#125;\r\n\r\n                              // Opacity 1 for the first Carousel Item\r\n                              this.tabItemContent[0].style.opacity = &#x27;1&#x27;;\r\n                          &#125;\r\n\r\n                          // On Init\r\n                          ngOnInit() &#123;\r\n\r\n                            // For the vanish Carousel Items, change the Aria Attributes and Tab Index\r\n                            this.groups.forEach((groupToClose: CarouselItemComponent) =&#x3E; &#123;\r\n                                groupToClose.isVisible = false;\r\n                                groupToClose.tabIndex = &#x27;-1&#x27;;\r\n                            &#125;);\r\n\r\n                            // For the visible Carousel Item, change the Aria Attributes and Tab Index\r\n                            this.groups[0].isVisible = true;\r\n                            this.groups[0].tabIndex = &#x27;0&#x27;;\r\n\r\n                          &#125;\r\n\r\n                          // Add a Carousel Item to the group of Carousel Item\r\n                          addGroup(group: CarouselItemComponent): void &#123;\r\n                            this.groups.push(group);\r\n                          &#125;\r\n\r\n                          // Click on Next Button\r\n                          next(group: CarouselItemComponent): void &#123;\r\n\r\n                                // &#x22;index&#x22; is the index of the carousel item in the group\r\n                                const index = this.groups.indexOf(group);\r\n\r\n                                // &#x22;lengthGroup&#x22; is the length of the Carousel Item Group\r\n                                const lengthGroup = this.groups.length;\r\n\r\n                               // For the vanish Carousel Items, change the Aria Attributes and Tab Index\r\n                                this.groups.forEach((groupToClose: CarouselItemComponent) =&#x3E; &#123;\r\n                                    groupToClose.isVisible = false;\r\n                                    groupToClose.tabIndex = &#x27;-1&#x27;;\r\n                                &#125;);\r\n\r\n                                // If click next button with the last Slide (go to the first slide)\r\n                                if (index + 1 &#x3E; lengthGroup - 1) &#123;\r\n                                    this.groups[0].isVisible = true;\r\n                                    this.groups[0].tabIndex = &#x27;0&#x27;;\r\n                                    for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                        this.tabItemContent[i].style.opacity = &#x27;0&#x27;;\r\n                                    &#125;\r\n                                    this.tabItemContent[lengthGroup - 1].style.opacity = &#x27;1&#x27;;\r\n                                    this.tabItemContent[0].style.transition = &#x27;none&#x27;;\r\n                                    this.tabItemContent[0].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[0].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                    this.tabItemContent[lengthGroup - 1].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[lengthGroup - 1].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n\r\n                                    setTimeout(() =&#x3E; &#123;\r\n                                        this.tabItemContent[0].style.opacity = &#x27;1&#x27;;\r\n                                        this.tabItemContent[0].style.transition = &#x27;transform 0.3s&#x27;;\r\n                                        this.tabItemContent[0].style.zIndex = &#x27;10&#x27;;\r\n                                        this.tabItemContent[0].style.transform = &#x27;translate(0,0)&#x27;;\r\n                                    &#125;, 0);\r\n\r\n                                &#125; else &#123;\r\n                                    this.groups[index + 1].isVisible = true;\r\n                                    this.groups[index + 1].tabIndex = &#x27;0&#x27;;\r\n                                    for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                        this.tabItemContent[i].style.opacity = &#x27;0&#x27;;\r\n                                    &#125;\r\n                                    this.tabItemContent[index].style.opacity = &#x27;1&#x27;;\r\n                                    this.tabItemContent[index + 1].style.transition = &#x27;none&#x27;;\r\n                                    this.tabItemContent[index + 1].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[index + 1].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                    this.tabItemContent[index].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[index].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n\r\n                                    setTimeout(() =&#x3E; &#123;\r\n                                        this.tabItemContent[index + 1].style.opacity = &#x27;1&#x27;;\r\n                                        this.tabItemContent[index + 1].style.transition = &#x27;transform 0.3s&#x27;;\r\n                                        this.tabItemContent[index + 1].style.zIndex = &#x27;10&#x27;;\r\n                                        this.tabItemContent[index + 1].style.transform = &#x27;translate(0,0)&#x27;;\r\n                                    &#125;, 0);\r\n                                &#125;\r\n                            &#125;\r\n\r\n                          previous(group: CarouselItemComponent): void &#123;\r\n                              const index = this.groups.indexOf(group);\r\n                              const lengthGroup = this.groups.length;\r\n\r\n                              this.groups.forEach((groupToClose: CarouselItemComponent) =&#x3E; &#123;\r\n                                  groupToClose.isVisible = false;\r\n                                  groupToClose.tabIndex = &#x27;-1&#x27;;\r\n                              &#125;);\r\n\r\n                              if (index - 1 &#x3C; 0) &#123;\r\n                                  this.groups[lengthGroup - 1].isVisible = true;\r\n                                  this.groups[lengthGroup - 1].tabIndex = &#x27;0&#x27;;\r\n\r\n                                  for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                      this.tabItemContent[i].style.opacity = &#x27;0&#x27;;\r\n                                  &#125;\r\n\r\n                                  this.tabItemContent[0].style.opacity = &#x27;1&#x27;;\r\n                                  this.tabItemContent[lengthGroup - 1].style.transition = &#x27;none&#x27;;\r\n                                  this.tabItemContent[lengthGroup - 1].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[lengthGroup - 1].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                  this.tabItemContent[0].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[0].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n\r\n                                  setTimeout(() =&#x3E; &#123;\r\n                                      this.tabItemContent[lengthGroup - 1].style.opacity = &#x27;1&#x27;;\r\n                                      this.tabItemContent[lengthGroup - 1].style.transition = &#x27;transform 0.3s&#x27;;\r\n                                      this.tabItemContent[lengthGroup - 1].style.zIndex = &#x27;10&#x27;;\r\n                                      this.tabItemContent[lengthGroup - 1].style.transform = &#x27;translate(0,0)&#x27;;\r\n                                  &#125;, 0);\r\n\r\n\r\n                              &#125; else &#123;\r\n                                  this.groups[index - 1].isVisible = true;\r\n                                  this.groups[index - 1].tabIndex = &#x27;0&#x27;;\r\n\r\n                                  this.tabItemContent[index].style.opacity = &#x27;1&#x27;;\r\n                                  this.tabItemContent[index - 1].style.transition = &#x27;none&#x27;;\r\n                                  this.tabItemContent[index - 1].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[index - 1].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                  this.tabItemContent[index].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[index].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n\r\n                                  setTimeout(() =&#x3E; &#123;\r\n                                      this.tabItemContent[index - 1].style.opacity = &#x27;1&#x27;;\r\n                                      this.tabItemContent[index - 1].style.transition = &#x27;transform 0.3s&#x27;;\r\n                                      this.tabItemContent[index - 1].style.zIndex = &#x27;10&#x27;;\r\n                                      this.tabItemContent[index - 1].style.transform = &#x27;translate(0,0)&#x27;;\r\n                                  &#125;, 0);\r\n                              &#125;\r\n                          &#125;\r\n\r\n                          goTo(indexToGo: number, group: CarouselItemComponent, ): void &#123;\r\n\r\n                              const random = Math.floor(Math.random() * 2 + 0);\r\n                              console.log(random);\r\n\r\n                              this.groups.forEach((groupToClose: CarouselItemComponent) =&#x3E; &#123;\r\n                                  groupToClose.isVisible = false;\r\n                                  groupToClose.tabIndex = &#x27;-1&#x27;;\r\n                              &#125;);\r\n\r\n                                  this.groups[indexToGo].isVisible = true;\r\n                                  this.groups[indexToGo].tabIndex = &#x27;0&#x27;;\r\n                                  this.tabItemContent[indexToGo].style.transition = &#x27;none&#x27;;\r\n                                  if (random === 1 ) &#123;\r\n                                      this.tabItemContent[indexToGo].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[indexToGo].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                      for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                          this.tabItemContent[i].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[i].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                      &#125;\r\n                                  &#125; else if (random === 0) &#123;\r\n                                      this.tabItemContent[indexToGo].style.transform = &#x27;translate(-&#x27; + this.tabItemContent[indexToGo].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                      for (let i = 0; i &#x3C; this.tabItemContent.length; i++) &#123;\r\n                                          this.tabItemContent[i].style.transform = &#x27;translate(+&#x27; + this.tabItemContent[i].getBoundingClientRect().width + &#x27;px, 0)&#x27;;\r\n                                      &#125;\r\n                                  &#125;\r\n\r\n                                  setTimeout(() =&#x3E; &#123;\r\n                                      this.tabItemContent[indexToGo].style.opacity = &#x27;1&#x27;;\r\n                                      this.tabItemContent[indexToGo].style.transition = &#x27;transform 0.3s&#x27;;\r\n                                      this.tabItemContent[indexToGo].style.zIndex = &#x27;10&#x27;;\r\n                                      this.tabItemContent[indexToGo].style.transform = &#x27;translate(0,0)&#x27;;\r\n                                  &#125;, 300);\r\n                          &#125;\r\n                        &#125;\r\n\r\n                </code>\r\n              </pre>\r\n        </div>\r\n\r\n        <p class="pre-code">For <strong>carousel-item.component.ts</strong></p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=js linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                  <code>\r\n                        import &#123;AfterViewInit, Component, Input, OnInit, ViewEncapsulation&#125; from &#x27;@angular/core&#x27;;\r\n                        import &#123;CarouselComponent&#125; from &#x27;../carousel.component&#x27;;\r\n\r\n                        @Component(&#123;\r\n                          selector: &#x27;c3m-carousel-item&#x27;,\r\n                          templateUrl: &#x27;./carousel-item.component.html&#x27;,\r\n                          styleUrls: [&#x27;./carousel-item.component.css&#x27;],\r\n                          encapsulation: ViewEncapsulation.None\r\n                        &#125;)\r\n                        export class CarouselItemComponent implements OnInit, AfterViewInit &#123;\r\n\r\n                          @Input() isVisible = true;\r\n                          @Input() index: number;\r\n                          @Input() tabIndex = &#x27;-1&#x27;;\r\n                          @Input() itemID: string;\r\n\r\n                          constructor(private carousel: CarouselComponent) &#123;\r\n                            this.carousel.addGroup(this);\r\n                          &#125;\r\n\r\n                          ngOnInit() &#123;\r\n                            this.itemID = &#x27;item&#x27; + this.index;\r\n                          &#125;\r\n\r\n                          ngAfterViewInit() &#123;\r\n                              this.itemID = &#x27;item&#x27; + this.index;\r\n                          &#125;\r\n\r\n                          previousSlide(): void &#123;\r\n                              this.carousel.previous(this);\r\n                          &#125;\r\n\r\n                          nextSlide(): void &#123;\r\n                              this.carousel.next(this);\r\n                            &#125;\r\n\r\n                        &#125;\r\n\r\n                </code>\r\n              </pre>\r\n        </div>\r\n\r\n      </c3m-tab>\r\n    </c3m-tabs>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n'},function(n,t){n.exports='\n\x3c!-- A Carousel Item--\x3e\n<li class="carousel-item" role="tab" tabindex={{tabIndex}} [attr.aria-selected]="isVisible" [attr.aria-controls]="itemID">\n        \x3c!-- Previous button --\x3e\n        <button class="previousCarouselItem" tabindex={{tabIndex}} (click)="previousSlide()" aria-label="Previous slide"></button>\n\n        \x3c!-- Carousel item Content --\x3e\n        <div class="carousel-item-content" role="tabpanel" id={{itemID}} [attr.aria-hidden]="!isVisible">\n            <ng-content></ng-content>\n        </div>\n\n        \x3c!-- Next Button --\x3e\n        <button class="nextCarouselItem" tabindex={{tabIndex}} (click)="nextSlide()" aria-label="Next slide"></button>\n</li>\n\n'},function(n,t){n.exports='\x3c!-- A Carousel --\x3e\n<div class="carousel">\n\n    \x3c!-- Carousel Item List --\x3e\n   <ul role="tablist" class="carouselItemList">\n       <ng-content></ng-content>\n   </ul>\n\n    \x3c!-- Carousel Bullet Points --\x3e\n    <ul class="bulletpoint">\n        <li *ngFor="let groupItem of groups; let i = \'index\' "\n            [attr.aria-controls]="groupItem.itemID"\n            role="tab"\n            [attr.aria-selected]="groupItem.isVisible"\n            tabindex={{groupItem.tabIndex}} >\n\n            <button #bulletPoint aria-label="Go to this slide" (click)="goTo(i)"> </button>\n        </li>\n    </ul>\n\n</div>'},function(n,t){n.exports='\x3c!-- COMPONENT PAGE HEADER FOR GETTING STARTED--\x3e\n<div class="panelTitle">\n    <h2> <strong> Getting Started </strong> </h2>\n    <ul>\n        <li><a scrollTo href="#install">Install Angular</a></li>\n        <li><a scrollTo href="#create">Create Project</a></li>\n        <li><a scrollTo href="#start">Start Project</a></li>\n        <li><a scrollTo href="#creamng">Import CreamNG</a></li>\n    </ul>\n</div>\n\n    <div class="HowInstallAngular">\n\n            \x3c!-- ANGULAR 2 INSTALL --\x3e\n            <h2 id="install"> How to install Angular 2 ?</h2>\n            <p>\n                <small>With Angular Cli and NPM</small>\n                The first Step is to download <a href="https://nodejs.org/en/"> Node.js </a> to use <strong> npm </strong>.\n                <span>&#10551; Npm is the <strong>package manager</strong> forJavaScript and the worldâs largest software registry</span>\n            </p>\n\n            \x3c!-- NPM INSTALL --\x3e\n            <p><em>If you don\'t have the last version of Npm, you can download it with this command :</em></p>\n             <pre>\n               <code>npm install npm@latest -g</code>\n             </pre>\n\n            \x3c!-- Install Angular --\x3e\n            <p>\n                The second Step is to download <strong>Angular-Cli </strong> with npm .\n                <span>&#10551; Angular-Cli is a <strong>command line </strong> interface for Angular. It allows to use :</span>\n            </p>\n\n            <ul>\n                <li>ng new</li>\n                <li>ng generate</li>\n                <li>ng serve</li>\n            </ul>\n\n            <p><span>And he integrates <strong>Test, Lint</strong> and <strong>Format </strong> </span> </p>\n\n            <pre>\n               <code>npm install -g angular-cli@latest</code>\n            </pre>\n\n            \x3c!-- ANGULAR 2 CREATE PROJECT --\x3e\n            <h2 id="create"> How to create your project</h2>\n\n            <p> To create a new project, write this command :</p>\n            <pre>\n               <code>ng new angular-app-name</code>\n            </pre>\n            <p><em>If you want an Angular project that use SASS, write this command :</em></p>\n             <pre>\n               <code>ng new angular-app-name --style = scss</code>\n            </pre>\n\n            <p>To create a component, use : </p>\n            <pre>\n               <code>ng generate component my-component-name</code>\n            </pre>\n            <p><em>You can use "ng generate" or just "ng g"</em></p>\n\n            <p> The others <strong>ng g</strong> attributes are :</p>\n            <ul>\n                <li>component</li>\n                <li>directive</li>\n                <li>pipe</li>\n                <li>service</li>\n                <li>class</li>\n                <li>guard</li>\n                <li>interface</li>\n                <li>enum</li>\n                <li>module</li>\n            </ul>\n\n            <p>You need to keep the last version of Angular Cli if you already have Angular\n                <span>&#10551; To avoid <strong>ersion conflicts</strong></span></p>\n             <pre>\n               <code>npm install -g angular-cli@latest</code>\n            </pre>\n\n            \x3c!-- START ANGULAR 2 PROJECT --\x3e\n            <h2 id="start"> How to start your project</h2>\n            <p>If you get your project with <strong>Git</strong>, the folder doesn\'t contains an <strong>node-modules</strong> folder.\n            <span>&#10551; To download it, write this command : </span></p>\n            <pre>\n               <code>npm install</code>\n            </pre>\n\n            <p> To test your project, use : </p>\n            <pre>\n               <code>ng serve</code>\n            </pre>\n\n            \x3c!-- Import --\x3e\n            <h2 id="creamng"> How to import CreamNG into your project?</h2>\n\n            <p> Install via npm : </p>\n            <pre>\n               <code>npm install creamng</code>\n            </pre>\n\n            <p> The Include the CreamNG module in your pap root module</p>\n            <pre>\n               <code>import &#123; CreamNgModule &#125; from \'creamng\'; </code>\n            </pre>\n        </div>\n'},function(n,t){n.exports='<main>\n\n \x3c!-- MAIN CONTENT --\x3e\n  <div class="contentMain">\n    <ng-content></ng-content>\n  </div>\n\n</main>\n'},function(n,t){n.exports="<p>\n  modal-alert works!\n</p>\n"},function(n,t){n.exports='\x3c!-- TITLE MODAL COMPONENT PAGE --\x3e\r\n<div class="panelTitle">\r\n    <h2> <strong> Modal </strong> Component </h2>\r\n    <ul>\r\n        <li><a scrollTo href="dialogModal">Dialog Modal</a></li>\r\n        <li><a href="#">Alert Modal</a></li>\r\n    </ul>\r\n</div>\r\n\r\n\r\n\x3c!-- DESCRIPTION ACCORDION COMPONENT PAGE --\x3e\r\n<div class="titleComponent">\r\n    <div class="descriptionComponent" id="dialogModal">\r\n        <h3> Dialog Modal <a href="https://github.com/CreamNG/Components/tree/master/modal" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a>  </h3>\r\n        <p> Its\' a button with a onClick event to display the modal component </p>\r\n\r\n\r\n\x3c!-- MODAL DEMO --\x3e\r\n<c3m-btn (click)="OpenModal()">Open Modal</c3m-btn>\r\n<c3m-modal></c3m-modal>\r\n\r\n\r\n    <p> Open a dialog modal that set the focus to the modal title when it opens,\r\n        and bring focus back to the same title when tab is pressed\r\n        (when the focus is on the close button)</p>\r\n\r\n\r\n\r\n        \x3c!-- TABS SNIPPETS --\x3e\r\n        <c3m-tabs>\r\n            <c3m-tab tabTitle="HTML">\r\n                <p class="pre-code"> To call the component </p>\r\n                <div class="code">\r\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                    <pre class="prettyprint linenums">\r\n                      <code>\r\n                          &#x3C;c3m-btn (click)=&#x22;OpenModal()&#x22;&#x3E;Open Modal&#x3C;/c3m-btn&#x3E;\r\n                          &#x3C;c3m-modal&#x3E;&#x3C;/c3m-modal&#x3E;\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n                <p class="pre-code"> For <strong>modal.component.html</strong> </p>\r\n                <div class="code">\r\n                    \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                    <pre class="prettyprint linenums">\r\n                      <code>\r\n                           &#x3C;div class=&#x22;dialog&#x22; [attr.aria-hidden]=&#x22;!isOpen&#x22;&#x3E;\r\n                              &#x3C;div class=&#x22;dialog-overlay&#x22; (click)=&#x22;ToggleOpen()&#x22; tabindex=&#x22;-1&#x22;&#x3E;&#x3C;/div&#x3E;\r\n                                &#x3C;div class=&#x22;dialog-content&#x22; [attr.aria-labeledby]=&#x22;dialogTitle&#x22; [attr.aria-describedby]=&#x22;dialogDescription&#x22; role=&#x22;dialog&#x22;&#x3E;\r\n\r\n                                  &#x3C;h1 #focusable  id=&#x22; &#123; &#123; dialogTitle &#125; &#125; &#x22; tabindex=&#x22;0&#x22;&#x3E; Modal Title &#x3C;/h1&#x3E;\r\n                                  &#x3C;p id=&#x22; &#123; &#123; dialogDescription &#125; &#125; &#x22; &#x3E;Modal content text&#x3C;/p&#x3E;\r\n\r\n                                  &#x3C;label for=&#x22;inputTest&#x22;&#x3E;A simple text input&#x3C;/label&#x3E;\r\n                                  &#x3C;input type=&#x22;text&#x22; id=&#x22;inputTest&#x22;&#x3E;\r\n\r\n                                  &#x3C;button (click)=&#x22;ToggleOpen()&#x22; (keydown)=&#x22;focusable.focus()&#x22; class=&#x22;dialog-close&#x22; [attr.aria-label]=&#x22;btnCloseLabel&#x22;&#x3E;&#x26;times;&#x3C;/button&#x3E;\r\n                                &#x3C;/div&#x3E;\r\n                            &#x3C;/div&#x3E;\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n            </c3m-tab>\r\n            <c3m-tab tabTitle="CSS">\r\n                <p class="pre-code"> For <strong>To call the component</strong> </p>\r\n                <div class="code">\r\n                    \x3c!--?prettify lang=css linenums=true?--\x3e\r\n                    <pre class="prettyprint linenums">\r\n                      <code>\r\n                               .dialog[aria-hidden=&#x22;true&#x22;] &#123;\r\n                                    display: none;\r\n                                &#125;\r\n                                    .dialog-overlay &#123;\r\n                                        z-index: 10;\r\n                                        background-color: rgba(16, 15, 15, 0.84);\r\n                                        position: fixed;\r\n                                        top: 0;\r\n                                        left: 0;\r\n                                        bottom: 0;\r\n                                        right: 0;\r\n                                    &#125;\r\n\r\n                                     .dialog-content &#123;\r\n                                            background-color: rgb(255, 255, 255);\r\n                                            z-index: 15;\r\n                                            position: fixed;\r\n                                            top: 40%;\r\n                                            left: 25%;\r\n                                            padding: 2em;\r\n                                            width: 50%;\r\n                                            border-radius: 2px;\r\n                                        &#125;\r\n                                     .dialog[aria-hidden=&#x22;false&#x22;] .dialog-content&#123;\r\n                                        animation-duration:1s;\r\n                                         animation-name: test;\r\n                                     &#125;\r\n                                            @keyframes test &#123;\r\n                                                from &#123;\r\n                                                    opacity: 0;\r\n                                                    top:0%;\r\n                                                &#125;\r\n                                                to &#123;\r\n                                                    opacity: 1;\r\n                                                    top:40%;\r\n                                                &#125;\r\n                                            &#125;\r\n\r\n                                .dialog h1 &#123;\r\n                                    margin-bottom: 1.5rem;\r\n                                    font-size: 2rem;\r\n                                &#125;\r\n                                    .dialog p&#123;\r\n                                        font-size: 1.2rem;\r\n                                        margin-bottom:1.5rem;\r\n                                    &#125;\r\n                                    .dialog-close &#123;\r\n                                        position: absolute;\r\n                                        top: 0.5em;\r\n                                        right: 0.5em;\r\n                                        border: 0;\r\n                                        padding: 0;\r\n                                        background-color: transparent;\r\n                                        font-weight: bold;\r\n                                        font-size: 1.25em;\r\n                                        width: 1.2em;\r\n                                        height: 1.2em;\r\n                                        text-align: center;\r\n                                        cursor: pointer;\r\n                                        transition: 0.15s;\r\n                                    &#125;\r\n                                        .dialog input&#123;\r\n                                            border-radius: 2px;\r\n                                            border: 1px solid gray;\r\n                                            height: 1.4rem;\r\n                                        &#125;\r\n                                            .dialog label&#123;\r\n                                                font-family:&#x22;robotoitalic&#x22;;\r\n                                                margin-right:1rem;\r\n                                            &#125;\r\n\r\n                                @media screen and (min-width: 700px) &#123;\r\n                                    .dialog-close &#123;\r\n                                        top: 1em;\r\n                                        right: 1em;\r\n                                    &#125;\r\n\r\n                                &#125;\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n            </c3m-tab>\r\n\r\n            <c3m-tab tabTitle="TypeScript">\r\n                <p class="pre-code"> To call the component </p>\r\n                <div class="code">\r\n                    \x3c!--?prettify lang=javascript linenums=true?--\x3e\r\n                    <pre class="prettyprint linenums">\r\n                      <code>\r\n                          // You need to add (in the parent.ts of the modal.component.ts)\r\n\r\n                          import &#123; ModalComponent &#125; from &#x27;./modal/modal.component&#x27;;  // import\r\n\r\n                              @ViewChild(ModalComponent) modal: ModalComponent;   // After "export class"\r\n\r\n                                public OpenModal() &#123;           // In "export class"\r\n                                    this.modal.ToggleOpen();\r\n                                &#125;\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n                <p class="pre-code"> For <strong>modal.component.ts</strong> </p>\r\n                <div class="code">\r\n                    \x3c!--?prettify lang=javascript linenums=true?--\x3e\r\n                    <pre class="prettyprint linenums">\r\n                      <code>\r\n                           import &#123;Component, OnInit, ViewEncapsulation, Input&#125; from &#x27;@angular/core&#x27;;\r\n\r\n                            @Component(&#123;\r\n                              selector: &#x27;c3m-modal&#x27;,\r\n                              templateUrl: &#x27;./modal.component.html&#x27;,\r\n                              styleUrls: [&#x27;./modal.component.css&#x27;],\r\n                              encapsulation: ViewEncapsulation.None\r\n                            &#125;)\r\n                            export class ModalComponent implements OnInit &#123;\r\n\r\n\r\n                              @Input() isOpen: boolean;\r\n                              dialogTitle = &#x27;dialogTitle&#x27;;\r\n                              dialogDescription = &#x27;dialogDescription&#x27;;\r\n                              btnCloseLabel = &#x27;Fermer la fen&#xEA;tre de dialogue&#x27;;\r\n\r\n                              ngOnInit() &#123;\r\n                                this.isOpen = false;\r\n                              &#125;\r\n\r\n                                /* Open Modal */\r\n                                ToggleOpen(): void &#123;\r\n                                    if (!this.isOpen) &#123;\r\n                                        this.isOpen = true;\r\n\r\n                                    &#125; else if (this.isOpen) &#123;\r\n                                        this.isOpen = false;\r\n                                    &#125;\r\n                                &#125;\r\n\r\n                                OnKey(event): void &#123;\r\n                                    console.log(event);\r\n                                &#125;\r\n                            &#125;\r\n\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n            </c3m-tab>\r\n        </c3m-tabs>\r\n    </div>\r\n</div>'},function(n,t){n.exports='<div class="dialog" [attr.aria-hidden]="!isOpen">\r\n  <div class="dialog-overlay" (click)="ToggleOpen()" tabindex="-1"></div>\r\n    <div class="dialog-content" [attr.aria-labeledby]="dialogTitle" [attr.aria-describedby]="dialogDescription" role="dialog">\r\n\r\n      <h1 #focusable  id="{{dialogTitle}}" tabindex="0"> Modal Title </h1>\r\n      <p id="{{dialogDescription}}">Modal content text</p>\r\n\r\n      <label for="inputTest">A simple text input</label>\r\n      <input type="text" id="inputTest">\r\n\r\n      <button (click)="ToggleOpen()" (keydown.tab)="focusable.focus()" class="dialog-close" [attr.aria-label]="btnCloseLabel">&times;</button>\r\n    </div>\r\n</div>'},function(n,t){n.exports='\r\n\x3c!-- TITLE NAVBAR COMPONENT PAGE --\x3e\r\n<div class="panelTitle">\r\n  <h2> <strong> Navbar </strong> Component </h2>\r\n  <ul>\r\n    <li><a scrollTo href="#nrmNav">Normal Navbar</a></li>\r\n    <li><a scrollTo href="#fixedTopNav">Fixed Top </a></li>\r\n  </ul>\r\n</div>\r\n\r\n\r\n\x3c!-- DESCRIPTION NAVBAR COMPONENT PAGE --\x3e\r\n<div class="titleComponent">\r\n  <div class="descriptionComponent" id="nrmNav">\r\n    <h3> Normal Navbar\r\n        <a href="https://github.com/CreamNG/Components/tree/master/navbar" class="gitBtn" target="_blank">\r\n            <img src="assets/img/github-box.svg" alt="download on github"/>\r\n            <span>Github</span>\r\n        </a>\r\n    </h3>\r\n    <p> Its\' a navbar with a burger button, links and dropdown</p>\r\n\r\n    \x3c!-- NAVBAR --\x3e\r\n    <c3m-navbar>\r\n\r\n    </c3m-navbar>\r\n\r\n        <p> Change the <strong>src</strong> attribute of <strong>a.logo</strong> for change the logo image</p>\r\n        <p> In <strong> li #navItems </strong>, create a <strong>a </strong> tag to create a normal link </p>\r\n        <p> In <strong> li #navItems </strong>, create a <strong>c3m-dropdown Component</strong> to create a dropdown </p>\r\n        <p> A <strong> Dropdown </strong> need a <strong> name </strong> and <strong> Dropdown Items Component </strong> .</p>\r\n        <p> A <strong> Dropdown Item </strong> need a <strong> route </strong> as a routerLink and a <strong> name </strong> </p>\r\n\r\n        <p> Don\'t miss to add <strong>arrow-down-bold_white.svg</strong> on navbar.component directory</p>\r\n\r\n\r\n      \x3c!-- TABS SNIPPETS --\x3e\r\n      <c3m-tabs>\r\n          <c3m-tab tabTitle="HTML">\r\n              <p class="pre-code"> To call the component </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                      <code>\r\n                         &#x3C;!-- NAVBAR --&#x3E;\r\n                        &#x3C;c3m-navbar&#x3E; &#x3C;/c3m-navbar&#x3E;\r\n                      </code>\r\n                  </pre>\r\n              </div>\r\n              <p class="pre-code"> For <strong>navbar.component.html</strong> </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n              <code>\r\n                      &#x3C;!-- Navbar --&#x3E;\r\n                        &#x3C;nav&#x3E;\r\n\r\n                          &#x3C;a routerLink=&#x22;#&#x22; class=&#x22;skip&#x22; alt=&#x22;go to main content (skip the menu)&#x22;&#x3E; go to main content &#x3C;/a&#x3E;\r\n\r\n                          &#x3C;!-- Burger Button --&#x3E;\r\n                          &#x3C;button class=&#x22;burgerbtn&#x22; [attr.aria-expanded]=&#x22;isOpen&#x22; [attr.aria-selected]=&#x22;isOpen&#x22;\r\n                                        [ngClass]=&#x22;&#123;over: isOver, isOpen: isOpen&#125;&#x22; title=&#x22;burger button&#x22; (click)=&#x27;toggleBurger()&#x27;&#x3E;\r\n                              &#x3C;img src=&#x22;assets/img/burger.svg&#x22; alt=&#x22;burger button&#x22;/&#x3E;\r\n                          &#x3C;/button&#x3E;\r\n\r\n                            &#x3C;!-- Logo --&#x3E;\r\n                            &#x3C;a [ngClass]=&#x22;&#123;over: isOver&#125;&#x22; #navItems routerLink=&#x22;#&#x22;\r\n                                 routerLinkActive=&#x22;active&#x22; title=&#x22;Logo&#x22; class=&#x22;logo&#x22;&#x3E;\r\n\r\n                                &#x3C;img src=&#x22;assets/img/logoExample.png&#x22; alt=&#x22;Logo&#x22;&#x3E;\r\n                            &#x3C;/a&#x3E;\r\n\r\n                            &#x3C;!-- LINK LIST --&#x3E;\r\n                                &#x3C;ul class=&#x22;navbarItems&#x22; [ngClass]=&#x22;&#123;over: isOver, isOpen: isOpen&#125;&#x22; &#x3E;\r\n\r\n                                    &#x3C;!-- DROPDOWN --&#x3E;\r\n                                    &#x3C;li #navItems&#x3E;\r\n                                        &#x3C;c3m-dropdown type=&#x22;bottom&#x22; name=&#x22;Item 1&#x22;&#x3E;\r\n\r\n                                              &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 1-1&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n                                              &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 1-2&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n                                              &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 1-3&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n\r\n                                        &#x3C;/c3m-dropdown&#x3E;\r\n                                    &#x3C;/li&#x3E;\r\n\r\n                                    &#x3C;!-- DROPDOWN --&#x3E;\r\n                                    &#x3C;li #navItems&#x3E;\r\n                                        &#x3C;c3m-dropdown type=&#x22;bottom&#x22; name=&#x22;Item 2&#x22;&#x3E;\r\n\r\n                                            &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 2-1&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n                                            &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 2-2&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n                                            &#x3C;c3m-dropdown-item route=&#x22;#&#x22; name=&#x22;Menu Item 2-3&#x22;&#x3E;&#x3C;/c3m-dropdown-item&#x3E;\r\n\r\n                                        &#x3C;/c3m-dropdown&#x3E;\r\n                                    &#x3C;/li&#x3E;\r\n\r\n                                    &#x3C;!-- SIMPLE LINK --&#x3E;\r\n                                    &#x3C;li #navItems&#x3E;&#x3C;a routerLink=&#x22;#&#x22; routerLinkActive=&#x22;active&#x22;&#x3E;Item 3&#x3C;/a&#x3E;&#x3C;/li&#x3E;\r\n\r\n                                &#x3C;/ul&#x3E;\r\n\r\n                        &#x3C;/nav&#x3E;\r\n\r\n              </code>\r\n            </pre>\r\n              </div>\r\n              <p class="pre-code"> For <strong>dropdown.component.html</strong> </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n              <code>\r\n                      &#x3C;!-- Button for Open Dropdown --&#x3E;\r\n                        &#x3C;button [ngClass]=&#x22; &#123;isOpen: isOpen&#125;&#x22; (click)=&#x22;openDropdown()&#x22;\r\n                                [attr.aria-expanded]=&#x22;isOpen&#x22;  [attr.aria-selected]=&#x22;isOpen&#x22;&#x3E;\r\n                           &#123; &#123; this.name &#125;&#125;\r\n                        &#x3C;/button&#x3E;\r\n\r\n                        &#x3C;!-- Links List --&#x3E;\r\n                        &#x3C;ul [ngClass]=&#x22; &#123;isOpen: isOpen&#125;&#x22; [attr.aria-hidden]=&#x22;!isOpen&#x22; class=&#x22;dropdownContent&#x22;&#x3E;\r\n                          &#x3C;li *ngFor=&#x22;let item of items&#x22;&#x3E;\r\n                            &#x3C;a [routerLink]=item.route routerLinkActive=&#x22;active&#x22;&#x3E;  &#123; &#123; item.name &#125;&#125;&#x3C;/a&#x3E;\r\n                          &#x3C;/li&#x3E;\r\n                        &#x3C;/ul&#x3E;\r\n\r\n              </code>\r\n            </pre>\r\n              </div>\r\n\r\n\r\n          </c3m-tab>\r\n          <c3m-tab tabTitle="CSS">\r\n              <p class="pre-code"> To call the component </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=css linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n              <code>\r\n\r\n                    /* NAVBAR */\r\n                    c3m-navbar nav&#123;\r\n                        background-color: #545454;\r\n                        padding: 0.9rem 1.1rem;\r\n                        position:relative;\r\n                        margin-bottom: 14.3rem;\r\n                    &#125;\r\n\r\n                    /* NAVBAR LINK */\r\n                    c3m-navbar .navbarItems&#123;\r\n                        display:inline-block;\r\n                        line-height: 2.6rem;\r\n                        transition: left 0.5s;\r\n                    &#125;\r\n                        c3m-navbar .navbarItems a &#123;\r\n                            color: white;\r\n                        &#125;\r\n                              c3m-navbar .navbarItems a:hover&#123;\r\n                                  text-decoration: underline;\r\n                              &#125;\r\n                                    c3m-navbar .navbarItems &#x3E; li &#123;\r\n                                               display: inline-block;\r\n                                               padding: 0 1.5rem;\r\n                                               color: white;\r\n                                    &#125;\r\n                    /* LOGO */\r\n                    c3m-navbar .logo&#123;\r\n                        display:inline-block;\r\n                        height: 2.6rem;\r\n                    &#125;\r\n\r\n                            /* NAVBAR ITEMS */\r\n                            c3m-navbar .navbarItems.over &#123;\r\n                                position: absolute;\r\n                                top: 0;\r\n                                left: -100%;\r\n                                background-color: #8c8e8c;\r\n                            &#125;\r\n                                c3m-navbar .navbarItems.over.isOpen&#123;\r\n                                    left:0;\r\n                                &#125;\r\n                                    c3m-navbar .navbarItems.over li &#123;\r\n                                        display:block;\r\n                                    &#125;\r\n                                        c3m-navbar .logo.over&#123;\r\n                                            position: absolute;\r\n                                            left: 50%;\r\n                                        &#125;\r\n\r\n                    /* DROPDOWN ITEM */\r\n                    c3m-dropdown[type=&#x22;bottom&#x22;] ul&#123;\r\n                        position: absolute;\r\n                        top: 100%;\r\n                        background-color: lightslategray;\r\n                        padding: 0.5rem;\r\n                        transform: scale(0);\r\n                        transition: transform 0.2s;\r\n                    &#125;\r\n                        c3m-dropdown[type=&#x22;bottom&#x22;] ul.isOpen&#123;\r\n                            transform: scale(1);\r\n                        &#125;\r\n                            c3m-dropdown &#x3E; button&#123;\r\n                                background: initial;\r\n                                color: white;\r\n                                cursor:pointer;\r\n                            &#125;\r\n\r\n                              c3m-dropdown &#x3E; button::after&#123;\r\n                                  content:&#x22;&#x22;;\r\n                                  width:1rem;\r\n                                  height:1rem;\r\n                                  display:inline-block;\r\n                                  vertical-align: sub;\r\n                                  margin-left: 0.3rem;\r\n                                  transition:transform 0.3s;\r\n                                  background: url(arrow-down-bold_white.svg) no-repeat right;\r\n                              &#125;\r\n                                    c3m-dropdown &#x3E; button.isOpen::after&#123;\r\n                                        transform: rotate(180deg);\r\n                                    &#125;\r\n                                     c3m-dropdown &#x3E; button:hover&#123;\r\n                                         font-weight:bold;\r\n                                     &#125;\r\n                                    .navbarItems.over c3m-dropdown .dropdownContent li&#123;\r\n                                            font: 1rem &#x22;robotoitalic&#x22;;\r\n                                        margin:0.6rem 0;\r\n                                      &#125;\r\n                                        .navbarItems.over c3m-dropdown .dropdownContent a&#123;\r\n                                            color: #3e3d3d;\r\n                                        &#125;\r\n                                        .navbarItems.over c3m-dropdown[type=&#x22;bottom&#x22;] ul&#123;\r\n                                            position: static;\r\n                                            background-color:initial;\r\n                                            top: 100%;\r\n                                            padding: 0;\r\n                                            transform: scale(0);\r\n                                            transition: transform 0.2s;\r\n                                            height:0;\r\n                                        &#125;\r\n                                            .navbarItems.over c3m-dropdown[type=&#x22;bottom&#x22;] ul.isOpen &#123;\r\n                                                transform: scale(1);\r\n                                                height:auto;\r\n                                            &#125;\r\n\r\n                     /* BURGER BUTTON */\r\n                     c3m-navbar .burgerbtn&#123;\r\n                         width: 1.8rem;\r\n                         background-color: initial;\r\n                         display:none;\r\n                         height: 2.4rem;\r\n                         cursor: pointer;\r\n                         transition: transform 0.5s;\r\n                     &#125;\r\n                        c3m-navbar .burgerbtn.over&#123;\r\n                            display: inline-block;\r\n                        &#125;\r\n                            c3m-navbar .burgerbtn.over.isOpen&#123;\r\n                                transform: rotate(90deg);\r\n                            &#125;\r\n                           c3m-navbar nav .skip&#123;\r\n                                position:absolute;\r\n                                left:-9999px;\r\n                            &#125;\r\n\r\n              </code>\r\n            </pre>\r\n              </div>\r\n\r\n          </c3m-tab>\r\n          <c3m-tab tabTitle="TypeScript">\r\n              <p class="pre-code">For <strong>navbar.component.ts</strong></p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=js linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                  <code>\r\n                      import &#123; Component, ViewEncapsulation, ElementRef, ViewChildren, QueryList, ChangeDetectorRef, HostListener,\r\n                        AfterViewInit, ContentChild, TemplateRef&#125; from &#x27;@angular/core&#x27;;\r\n                        import &#123;DropdownComponent&#125; from &#x27;./dropdown/dropdown.component&#x27;;\r\n\r\n                        @Component(&#123;\r\n                          selector: &#x27;c3m-navbar&#x27;,\r\n                          templateUrl: &#x27;./navbar.component.html&#x27;,\r\n                          styleUrls: [&#x27;./navbar.component.css&#x27;],\r\n                          encapsulation: ViewEncapsulation.None,\r\n                        &#125;)\r\n                        export class NavbarComponent implements AfterViewInit &#123;\r\n\r\n                            /* List of Nav Items */\r\n                            @ViewChildren(&#x27;navItems&#x27;) itemsElement: QueryList&#x3C;ElementRef&#x3E;;\r\n\r\n                            /* Dropdowns Tab */\r\n                            dropdowns: DropdownComponent[]=[];\r\n\r\n                            /* Variables */\r\n                            isOver: boolean;\r\n                            widthBreak: number;\r\n                            sizeInit = 0;\r\n                            isOpen = false;\r\n\r\n                            /* Resize breakpoint tab */\r\n                            @HostListener(&#x27;window:resize&#x27;, [&#x27;$event&#x27;])\r\n                            onResize(event) &#123;\r\n                                if ( this.itemsElement.last.nativeElement.offsetTop &#x3E; this.itemsElement.first.nativeElement.offsetTop ) &#123;\r\n\r\n                                    if ( (this.itemsElement.last.nativeElement.offsetTop &#x3E; this.itemsElement.first.nativeElement.offsetTop) &#x26;&#x26;  (this.isOver !== true) ) &#123;\r\n                                        this.widthBreak = event.target.innerWidth;\r\n                                        this.isOver = true;\r\n                                    &#125;\r\n\r\n                                    if (this.widthBreak) &#123;\r\n                                        if ( (event.target.innerWidth &#x3E; this.widthBreak) &#x26;&#x26; (this.isOver === true) ) &#123;\r\n                                            this.isOver = false;\r\n                                        &#125;\r\n\r\n                                    &#125; else &#123;\r\n                                        this.widthBreak = this.sizeInit;\r\n                                        if ( event.target.innerWidth &#x3E;= this.widthBreak ) &#123;\r\n                                            this.isOver = false;\r\n                                        &#125;\r\n                                    &#125;\r\n                                &#125; else &#123;\r\n                                    this.isOver = false;\r\n                                &#125;\r\n                                this.cdr.detectChanges();\r\n                            &#125;\r\n\r\n                            /* Click on Burger Button */\r\n                            toggleBurger() &#123;\r\n                                if (this.isOpen === true) &#123;\r\n                                    this.isOpen = false;\r\n                                &#125; else if (this.isOpen === false) &#123;\r\n                                    this.isOpen = true;\r\n                                &#125;\r\n                            &#125;\r\n\r\n                            /* Resize auto page load */\r\n                            ngAfterViewInit(): void &#123;\r\n                                if ( this.itemsElement.last.nativeElement.offsetTop &#x3E; this.itemsElement.first.nativeElement.offsetTop ) &#123;\r\n\r\n                                    if ( (this.itemsElement.last.nativeElement.offsetTop &#x3E; this.itemsElement.first.nativeElement.offsetTop) &#x26;&#x26;  (this.isOver !== true) ) &#123;\r\n                                        this.widthBreak = window.innerWidth;\r\n                                        this.isOver = true;\r\n\r\n                                    &#125;\r\n\r\n                                    if (this.widthBreak) &#123;\r\n                                        if ( (window.innerWidth &#x3E; this.widthBreak) &#x26;&#x26; (this.isOver === true) ) &#123;\r\n                                            this.isOver = false;\r\n                                        &#125;\r\n\r\n                                    &#125; else &#123;\r\n                                        this.widthBreak = this.sizeInit;\r\n                                        if ( window.innerWidth &#x3E;= this.widthBreak ) &#123;\r\n                                            this.isOver = false;\r\n                                        &#125;\r\n                                    &#125;\r\n                                &#125; else &#123;\r\n                                    this.isOver = false;\r\n                                &#125;\r\n                                this.cdr.detectChanges();\r\n                            &#125;\r\n\r\n                            /* constructor navbar */\r\n                            constructor(private cdr: ChangeDetectorRef) &#123;\r\n                            &#125;\r\n\r\n                            /* Close All the Dropdowns */\r\n                            closeAllDropdown()&#123;\r\n                                this.dropdowns.forEach((DropdownComponent) =&#x3E; &#123;\r\n                                    DropdownComponent.isOpen = false;\r\n                                &#125;);\r\n                            &#125;\r\n\r\n                            /* Add a Dropdown to Dropdowns Tab */\r\n                            addTab(dropdown: DropdownComponent)&#123;\r\n                                this.dropdowns.push(dropdown);\r\n                            &#125;\r\n                        &#125;\r\n\r\n                </code>\r\n              </pre>\r\n              </div>\r\n\r\n              <p class="pre-code">For <strong>dropdown.component.ts</strong></p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=js linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                          <code>\r\n                                import &#123;Component, Input, ViewEncapsulation&#125; from &#x27;@angular/core&#x27;;\r\n                                import &#123;DropdownItemComponent&#125; from &#x27;./dropdown-item/dropdown-item.component&#x27;;\r\n                                import &#123;NavbarComponent&#125; from &#x27;../navbar.component&#x27;;\r\n\r\n                                @Component(&#123;\r\n                                  selector: &#x27;c3m-dropdown&#x27;,\r\n                                  templateUrl: &#x27;./dropdown.component.html&#x27;,\r\n                                  styleUrls: [&#x27;./dropdown.component.css&#x27;],\r\n                                  encapsulation: ViewEncapsulation.None\r\n                                &#125;)\r\n                                export class DropdownComponent &#123;\r\n\r\n                                    // INPUT\r\n                                    @Input() isOpen;\r\n                                    @Input() name;\r\n\r\n                                    // ITEMS\r\n                                    items: DropdownItemComponent[] = [];\r\n\r\n\r\n                                    // CONSTRUCTOR\r\n                                    constructor(private navbar: NavbarComponent) &#123;\r\n                                        navbar.addTab(this);\r\n                                    &#125;\r\n\r\n                                    /* Add Item to a DropdownItem array */\r\n                                    addTab(item: DropdownItemComponent) &#123;\r\n                                        this.items.push(item);\r\n                                    &#125;\r\n\r\n                                    /* Open the dropdown menu */\r\n                                    openDropdown() &#123;\r\n                                      if (this.isOpen === true) &#123;\r\n                                          this.navbar.closeAllDropdown();\r\n                                      &#125;\r\n                                      else &#123;\r\n                                          this.navbar.closeAllDropdown();\r\n                                          this.isOpen = true;\r\n                                      &#125;\r\n                                    &#125;\r\n\r\n                                &#125;\r\n                          </code>\r\n                        </pre>\r\n              </div>\r\n\r\n              <p class="pre-code"> For <strong>dropdown-item.component.ts</strong></p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=js linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                    <code>\r\n                        import &#123;Component, Input, ViewEncapsulation&#125; from &#x27;@angular/core&#x27;;\r\n                        import &#123;DropdownComponent&#125; from &#x27;../dropdown.component&#x27;;\r\n                        import &#123;AppComponent&#125; from &#x27;../../../../../app.component&#x27;;\r\n\r\n                        @Component(&#123;\r\n                          selector: &#x27;c3m-dropdown-item&#x27;,\r\n                          templateUrl: &#x27;./dropdown-item.component.html&#x27;,\r\n                          styleUrls: [&#x27;./dropdown-item.component.css&#x27;],\r\n                          encapsulation: ViewEncapsulation.None\r\n                        &#125;)\r\n                        export class DropdownItemComponent&#123;\r\n\r\n                          /* Inputs */\r\n                          @Input() name;\r\n                          @Input() idItem: number;\r\n                          @Input() route;\r\n\r\n                          /* Dropdown Item Constructor */\r\n                            constructor(dropdown: DropdownComponent, app: AppComponent) &#123;\r\n                              dropdown.addTab(this);\r\n                              this.idItem = app.randomID();\r\n                          &#125;\r\n\r\n                        &#125;\r\n\r\n                    </code>\r\n              </pre>\r\n              </div>\r\n          </c3m-tab>\r\n\r\n\r\n      </c3m-tabs>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\x3c!-- FOR FIXED TOP --\x3e\r\n<div class="titleComponent">\r\n  <div class="descriptionComponent" id="fixedTopNav">\r\n    <h3> Fixed Top Navbar\r\n\r\n    </h3>\r\n    <p> For a <strong>Fixed Top </strong> navbar, you need to add class <strong>fixed-top</strong>\r\n    on the <strong>c3m-dropdown </strong> tag </p>\r\n\r\n      \x3c!-- TABS SNIPPETS --\x3e\r\n      <c3m-tabs>\r\n          <c3m-tab tabTitle="HTML">\r\n              <p class="pre-code"> Add this class </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=html linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                      <code>\r\n                         &#x3C;!-- NAVBAR --&#x3E;\r\n                        &#x3C;c3m-navbar class=&#x22;fixed-top&#x22;&#x3E; &#x3C;/c3m-navbar&#x3E;\r\n                      </code>\r\n                  </pre>\r\n              </div>\r\n          </c3m-tab>\r\n          <c3m-tab tabTitle="CSS">\r\n              <p class="pre-code"> To call the component </p>\r\n              <div class="code">\r\n                  \x3c!--?prettify lang=css linenums=true?--\x3e\r\n                  <pre class="prettyprint linenums">\r\n                      <code>\r\n                          /* FIXED TOP */\r\n                          c3m-navbar.fixed-top nav&#123;\r\n                              position: fixed;\r\n                              top: 0;\r\n                              left: 0;\r\n                              width: 100%;\r\n                          &#125;\r\n                      </code>\r\n                  </pre>\r\n              </div>\r\n          </c3m-tab>\r\n\r\n      </c3m-tabs>\r\n\r\n      </div>\r\n    </div>\r\n'},function(n,t){n.exports=""},function(n,t){n.exports='\x3c!-- Button for Open Dropdown --\x3e\n<button\n        [ngClass]="{isOpen: isOpen}"\n        (click)="openDropdown()"\n        [attr.aria-expanded]="isOpen"\n        [attr.aria-selected]="isOpen">\n  {{ this.name }}\n</button>\n\n\x3c!-- Links List --\x3e\n<ul [ngClass]="{isOpen: isOpen}" [attr.aria-hidden]="!isOpen" class="dropdownContent">\n  <li *ngFor="let item of items">\n    <a [routerLink]=item.route routerLinkActive="active"> {{ item.name }}</a>\n  </li>\n</ul>\n'},function(n,t){n.exports='    \x3c!-- Navbar --\x3e\n    <nav>\n\n      <a scrollTo href="#" class="skip" alt="go to main content (skip the menu)"> go to main content </a>\n\n      \x3c!-- Burger Button --\x3e\n      <button class="burgerbtn"\n              [attr.aria-expanded]="isOpen"\n              [attr.aria-selected]="isOpen"\n              [ngClass]="{over: isOver, isOpen: isOpen}"\n              title="burger button"\n              (click)=\'toggleBurger()\'>\n\n          <img src="assets/img/burger.svg"\n               alt="burger button"/>\n\n      </button>\n\n\n        \x3c!-- Logo --\x3e\n        <a [ngClass]="{over: isOver}"\n          #navItems routerLink="#"\n          routerLinkActive="active"\n          title="Logo" class="logo">\n\n            <img src="assets/img/logoExample.png" alt="Logo">\n        </a>\n\n        \x3c!-- Only for Demo --\x3e\n        <div class="containerDemo" [ngClass]="{over: isOver}">\n\n        \x3c!-- LINK LIST --\x3e\n            <ul class="navbarItems" [ngClass]="{over: isOver, isOpen: isOpen}" >\n\n                \x3c!-- DROPDOWN --\x3e\n                <li #navItems>\n                    <c3m-dropdown type="bottom" name="Item 1">\n\n                          <c3m-dropdown-item route="#" name="Menu Item 1-1"></c3m-dropdown-item>\n                          <c3m-dropdown-item route="#" name="Menu Item 1-2"></c3m-dropdown-item>\n                          <c3m-dropdown-item route="#" name="Menu Item 1-3"></c3m-dropdown-item>\n\n                    </c3m-dropdown>\n                </li>\n\n                \x3c!-- DROPDOWN --\x3e\n                <li #navItems>\n                    <c3m-dropdown type="bottom" name="Item 2">\n\n                        <c3m-dropdown-item route="#" name="Menu Item 2-1"></c3m-dropdown-item>\n                        <c3m-dropdown-item route="#" name="Menu Item 2-2"></c3m-dropdown-item>\n                        <c3m-dropdown-item route="#" name="Menu Item 2-3"></c3m-dropdown-item>\n\n                    </c3m-dropdown>\n                </li>\n\n                \x3c!-- SIMPLE LINK --\x3e\n                <li #navItems><a routerLink="#" routerLinkActive="active">Item 3</a></li>\n\n            </ul>\n\n        </div>\n\n    </nav>\n'},function(n,t){n.exports='\x3c!-- TITLE PAGINATION COMPONENT PAGE --\x3e\r\n<div class="panelTitle">\r\n  <h2> <strong> Pagination </strong> Component </h2>\r\n  <ul>\r\n    <li><a scrollTo href="pagination">Pagination</a></li>\r\n  </ul>\r\n</div>\r\n\r\n\x3c!-- DESCRIPTION PAGINATION COMPONENT PAGE --\x3e\r\n<div class="titleComponent">\r\n  <div class="descriptionComponent" id="pagination">\r\n    <h3> Pagination  <a href="https://github.com/CreamNG/Components/tree/master/pagination" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a></h3>\r\n    <p> A simple pagination page with Previous, First, Next, Last buttons and a button for each page </p>\r\n\r\n\r\n    <c3m-pagination></c3m-pagination>\r\n\r\n    <p> For change the value of items per page, change on pager.service.ts "pageSize"</p>\r\n\r\n    \x3c!-- TABS SNIPPETS --\x3e\r\n    <c3m-tabs>\r\n      <c3m-tab tabTitle="HTML">\r\n        <p class="pre-code"> To call the component </p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=html linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                      <code>\r\n                           &#x3C;c3m-pagination&#x3E;&#x3C;/c3m-pagination&#x3E;\r\n                      </code>\r\n                    </pre>\r\n        </div>\r\n        <p class="pre-code"> For <strong>column-table.component.html</strong> </p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=html linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                      <code>\r\n                          &#x3C;!-- Pagination container --&#x3E;\r\n                          &#x3C;div class=&#x22;paginationContainer&#x22;&#x3E;\r\n\r\n                                &#x3C;!-- All Items --&#x3E;\r\n                                &#x3C;ul class=&#x22;paginationItems&#x22;&#x3E;\r\n                                    &#x3C;li *ngFor=&#x22;let item of pagedItems&#x22;&#x3E; &#123;  &#123; item.name &#125;  &#125; &#x3C;/li&#x3E;\r\n                                &#x3C;/ul&#x3E;\r\n\r\n                                &#x3C;!-- Pages --&#x3E;\r\n                                &#x3C;ul *ngIf=&#x22;pager.pages &#x26;&#x26; pager.pages.length&#x22; class=&#x22;pagination&#x22;&#x3E;\r\n\r\n                                   &#x3C;!-- first --&#x3E;\r\n                                  &#x3C;li [ngClass]=&#x22; &#123; disabled:pager.currentPage === 1 &#125; &#x22; class=&#x22;btnFirst&#x22;&#x3E;\r\n                                    &#x3C;button (click)=&#x22;setPage(1)&#x22;&#x3E;&#x3C;img src=&#x22;assets/img/first.svg&#x22; alt=&#x22;First Page&#x22;/&#x3E; &#x3C;/button&#x3E;\r\n                                  &#x3C;/li&#x3E;\r\n\r\n                                  &#x3C;!-- previous --&#x3E;\r\n                                  &#x3C;li [ngClass]=&#x22; &#123; disabled:pager.currentPage === 1 &#125; &#x22; class=&#x22;btnPrevious&#x22;&#x3E;\r\n                                    &#x3C;button (click)=&#x22;setPage(pager.currentPage - 1)&#x22;&#x3E;&#x3C;img src=&#x22;assets/img/previous.svg&#x22; alt=&#x22;Previous Page&#x22;/&#x3E; &#x3C;/button&#x3E;\r\n                                  &#x3C;/li&#x3E;\r\n\r\n                                  &#x3C;!-- pages numbers --&#x3E;\r\n                                  &#x3C;li *ngFor=&#x22;let page of pager.pages&#x22; [ngClass]=&#x22; &#123; active:pager.currentPage === page &#125; &#x22; class=&#x22;btnPages&#x22;&#x3E;\r\n                                    &#x3C;button (click)=&#x22;setPage(page)&#x22;&#x3E; &#123;  &#123; page &#125;  &#125; &#x3C;/button&#x3E;\r\n                                  &#x3C;/li&#x3E;\r\n\r\n                                  &#x3C;!-- next --&#x3E;\r\n                                  &#x3C;li [ngClass]=&#x22; &#123; disabled:pager.currentPage === pager.totalPages &#125; &#x22; class=&#x22;btnNext&#x22;&#x3E;\r\n                                    &#x3C;button (click)=&#x22;setPage(pager.currentPage + 1)&#x22;&#x3E;&#x3C;img src=&#x22;assets/img/next.svg&#x22; alt=&#x22;Next Page&#x22;/&#x3E; &#x3C;/button&#x3E;\r\n                                  &#x3C;/li&#x3E;\r\n\r\n                                  &#x3C;!-- last --&#x3E;\r\n                                  &#x3C;li [ngClass]=&#x22; &#123; disabled:pager.currentPage === pager.totalPages &#125; &#x22; class=&#x22;btnLast&#x22;&#x3E;\r\n                                    &#x3C;button (click)=&#x22;setPage(pager.totalPages)&#x22;&#x3E;&#x3C;img src=&#x22;assets/img/last.svg&#x22; alt=&#x22;Last Page&#x22;/&#x3E; &#x3C;/button&#x3E;\r\n                                  &#x3C;/li&#x3E;\r\n\r\n                                &#x3C;/ul&#x3E;\r\n                          \r\n                          &#x3C;/div&#x3E;\r\n                      </code>\r\n                    </pre>\r\n        </div>\r\n      </c3m-tab>\r\n      <c3m-tab tabTitle="CSS">\r\n        <p class="pre-code"> For <strong>To call the component</strong> </p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=css linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                      <code>\r\n                                c3m-pagination .paginationContainer&#123;\r\n                                    padding:0.5rem;\r\n                                &#125;\r\n                                    c3m-pagination .paginationItems&#123;\r\n                                        display:block;\r\n                                        text-align: center;\r\n                                    &#125;\r\n                                        c3m-pagination .paginationItems li&#123;\r\n                                            color: #3e3535;\r\n                                            font: 1rem &#x22;robotoitalic&#x22;;\r\n                                        &#125;\r\n                                          c3m-pagination .pagination&#123;\r\n                                              margin-top:2rem;\r\n                                              text-align:center;\r\n                                          &#125;\r\n                                           c3m-pagination .pagination li &#123;\r\n                                               background-color: #423d3d;\r\n                                               width: 1.7rem;\r\n                                               display: inline-block;\r\n                                               height: 1.7rem;\r\n                                               margin-right: 0.3rem;\r\n                                               margin-bottom: 0.6rem;\r\n                                           &#125;\r\n                                            c3m-pagination .pagination li.active &#123;\r\n                                               background-color: #7a7579;\r\n                                           &#125;\r\n                                           c3m-pagination .pagination button&#123;\r\n                                               background-color: initial;\r\n                                               height: 100%;\r\n                                               width: 100%;\r\n                                               color:white;\r\n                                               cursor:pointer;\r\n                                           &#125;\r\n                                            c3m-pagination .pagination button img&#123;\r\n                                                width: 80%;\r\n                                                height: 80%;\r\n                                                margin: 0 auto;\r\n                                                display: block;\r\n                                            &#125;\r\n                                                c3m-pagination .pagination li:hover&#123;\r\n                                                    background-color: #635e5e;\r\n                                                &#125;\r\n                                                 c3m-pagination .pagination li.disabled &#123;\r\n                                                     background-color:#615d5d;\r\n                                                 &#125;\r\n                                                    c3m-pagination .pagination li.disabled button &#123;\r\n                                                       pointer-events: none;\r\n                                                    &#125;\r\n                                             @media screen and (min-width: 850px)&#123;\r\n                                                 c3m-pagination .pagination li &#123;\r\n                                                     width: 2.1rem;\r\n                                                     height: 2.1rem;\r\n                                                 &#125;\r\n                                             &#125;\r\n\r\n                                            @media screen and (min-width: 1000px)&#123;\r\n                                                c3m-pagination .pagination li &#123;\r\n                                                    width: 2.4rem;\r\n                                                    height: 2.4rem;\r\n                                                &#125;\r\n                                            &#125;\r\n                                            @media screen and (min-width: 1300px)&#123;\r\n                                                c3m-pagination .paginationContainer &#123;\r\n                                                   width:50%;\r\n                                                &#125;\r\n                                            }\r\n\r\n                      </code>\r\n                    </pre>\r\n        </div>\r\n      </c3m-tab>\r\n\r\n      <c3m-tab tabTitle="TypeScript">\r\n        <p class="pre-code"> To call the component (pagination.component.ts)</p>\r\n        <div class="code">\r\n          \x3c!--?prettify lang=javascript linenums=true?--\x3e\r\n          <pre class="prettyprint linenums">\r\n                      <code>\r\n                        import &#123;Component, OnInit, ViewEncapsulation&#125; from &#x27;@angular/core&#x27;;\r\n                        import &#123; Http, Headers, RequestOptions, Response &#125; from &#x27;@angular/http&#x27;;\r\n                        import &#x27;rxjs/add/operator/map&#x27;;\r\n                        import &#123; PagerService &#125; from &#x27;./pager.service&#x27;;\r\n\r\n\r\n                        @Component(&#123;\r\n                          selector: &#x27;c3m-pagination&#x27;,\r\n                          moduleId: module.id,\r\n                          templateUrl: &#x27;./pagination.component.html&#x27;,\r\n                          styleUrls: [&#x27;./pagination.component.css&#x27;],\r\n                          encapsulation: ViewEncapsulation.None\r\n                        &#125;)\r\n                        export class PaginationComponent implements OnInit &#123;\r\n\r\n                            // Constructor\r\n                            constructor(private http: Http, private pagerService: PagerService) &#123; &#125;\r\n\r\n                            // Array of all items to be paged\r\n                            private allItems: any[];\r\n\r\n                            // Pager Object\r\n                            pager: any = &#123;&#125;;\r\n\r\n                            // Paged Items\r\n                            pagedItems: any[];\r\n\r\n                            // On Init\r\n                            ngOnInit() &#123;\r\n                                // Get Data of a JSON (or other...)\r\n                                this.http.get(&#x27;assets/json/dataPagination.json&#x27;)\r\n                                    .map((response: Response) =&#x3E; response.json()) // Specify JSON type\r\n                                    .subscribe(data =&#x3E; &#123;\r\n                                        // Set items to response Json\r\n                                        this.allItems = data;\r\n\r\n                                        // Initialize to page 1\r\n                                        this.setPage(1);\r\n                                    &#125;);\r\n                            &#125;\r\n\r\n                            // SetPage\r\n                            setPage(page: number) &#123;\r\n                                // check page &#x3C; 1 or page &#x3E; totalPages\r\n                                if (page &#x3C; 1 || page &#x3E; this.pager.totalPages) &#123;\r\n                                    return;\r\n                                &#125;\r\n                                // Get pager object from service ( numberOfItems, Page)\r\n                                this.pager = this.pagerService.getPager(this.allItems.length, page);\r\n\r\n                                // Get current page of items (copy with slice(start,end))\r\n                                this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n                            &#125;\r\n\r\n                        &#125;\r\n\r\n                      </code>\r\n                    </pre>\r\n                </div>\r\n\r\n          <p class="pre-code"> To call the service (pager.service.ts) </p>\r\n          <div class="code">\r\n              \x3c!--?prettify lang=javascript linenums=true?--\x3e\r\n              <pre class="prettyprint linenums">\r\n                      <code>\r\n                        import &#123; Injectable &#125; from &#x27;@angular/core&#x27;;\r\n\r\n                        @Injectable()\r\n                        export class PagerService &#123;\r\n\r\n                            // Function getPager (totalItems,  CurrentPage  , PageSize)\r\n                            getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) &#123;\r\n\r\n                                // Calculate total pages\r\n                                const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n                                // StartPage and EndPage declaration\r\n                                let startPage: number, endPage: number;\r\n\r\n                                // Check TotalPages &#x3C;= 10\r\n                                if (totalPages &#x3C;= 10) &#123;\r\n                                    startPage = 1; // If Less Than 10 total pages\r\n                                    endPage = totalPages; // Show All Pages\r\n                                &#125; else &#123;\r\n                                    // Check Total Pages &#x3E; 10\r\n                                    if (currentPage &#x3C;= 6) &#123;\r\n                                        startPage = 1;  // StartPage = 1\r\n                                        endPage = 10; // EndPage = 10\r\n                                    &#125; else if (currentPage + 4 &#x3E;= totalPages) &#123;\r\n                                        // Check CurrentPage + 4 &#x3E;= TotalPages  (Exit TotalPages.length)\r\n                                        startPage = totalPages - 9; // StartPage = TotalPage - 9\r\n                                        endPage = totalPages;   // EndPage = total pages\r\n                                    &#125; else &#123;\r\n                                        // Check CurrentPage &#x3E; 6 &#x26;&#x26; CurrentPage + 4 &#x3C; total pages\r\n                                        startPage = currentPage - 5; // StartPage = CurrentPage - 5\r\n                                        endPage = currentPage + 4; // EndPage = CurrentPage +4\r\n                                    &#125;\r\n                                &#125;\r\n\r\n                                // StartIndex = currentPage-1 * pageSize\r\n                                const startIndex = (currentPage - 1) * pageSize;\r\n\r\n                                // EndIndex = min between [startIndex + pageSize-1] AND [totalItems-1]\r\n                                const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n                                const pages: number[] = [];\r\n\r\n                                // Create an array of pages to ng-repeat in the pager control\r\n                                for (let i = startPage; i &#x3C; endPage + 1; i++) &#123;\r\n                                    pages.push(i);\r\n                                &#125;\r\n\r\n                                // Return Pager Properties\r\n                                return &#123;\r\n                                    totalItems: totalItems,\r\n                                    currentPage: currentPage,\r\n                                    pageSize: pageSize,\r\n                                    totalPages: totalPages,\r\n                                    startPage: startPage,\r\n                                    endPage: endPage,\r\n                                    startIndex: startIndex,\r\n                                    endIndex: endIndex,\r\n                                    pages: pages\r\n                                &#125;;\r\n                            &#125;\r\n                        &#125;\r\n\r\n                      </code>\r\n                    </pre>\r\n          </div>\r\n\r\n      </c3m-tab>\r\n    </c3m-tabs>\r\n  </div>\r\n</div>'},function(n,t){n.exports='\x3c!-- Pagination container --\x3e\n<div class="paginationContainer">\n\n      \x3c!-- All Items --\x3e\n      <ul class="paginationItems">\n          <li *ngFor="let item of pagedItems">{{item.name}}</li>\n      </ul>\n\n      \x3c!-- Pages --\x3e\n      <ul *ngIf="pager.pages && pager.pages.length" class="pagination">\n\n         \x3c!-- first --\x3e\n        <li [ngClass]="{disabled:pager.currentPage === 1}" class="btnFirst">\n          <button (click)="setPage(1)"><img src="assets/img/first.svg" alt="First Page"/> </button>\n        </li>\n\n        \x3c!-- previous --\x3e\n        <li [ngClass]="{disabled:pager.currentPage === 1}" class="btnPrevious">\n          <button (click)="setPage(pager.currentPage - 1)"><img src="assets/img/previous.svg" alt="Previous Page"/> </button>\n        </li>\n\n        \x3c!-- pages numbers --\x3e\n        <li *ngFor="let page of pager.pages" [ngClass]="{active:pager.currentPage === page}" class="btnPages">\n          <button (click)="setPage(page)">{{page}}</button>\n        </li>\n\n        \x3c!-- next --\x3e\n        <li [ngClass]="{disabled:pager.currentPage === pager.totalPages}" class="btnNext">\n          <button (click)="setPage(pager.currentPage + 1)"><img src="assets/img/next.svg" alt="Next Page"/> </button>\n        </li>\n\n        \x3c!-- last --\x3e\n        <li [ngClass]="{disabled:pager.currentPage === pager.totalPages}" class="btnLast">\n          <button (click)="setPage(pager.totalPages)"><img src="assets/img/last.svg" alt="Last Page"/> </button>\n        </li>\n\n      </ul>\n\n\n</div>'},function(n,t){n.exports='\x3c!-- TITLE SLIDER COMPONENT PAGE --\x3e\n<div class="panelTitle">\n  <h2> <strong> Slider </strong> Component </h2>\n  <ul>\n    <li><a scrollTo href="#simpleSlider">Simple Slider</a></li>\n    <li><a scrollTo href="#bubbleSlider">Bubble Slider</a></li>\n  </ul>\n</div>\n\n\n\x3c!-- DESCRIPTION SLIDER COMPONENT PAGE --\x3e\n<div class="titleComponent">\n  <div class="descriptionComponent" id="simpleSlider">\n    <h3> Normal Slider <a href="https://github.com/CreamNG/Components/tree/master/slider" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> It\'s a normal slider with OUTPUT tag for display the value</p>\n\n    \x3c!-- SIMPLE SLIDER --\x3e\n    <c3m-slider\n          title="Simple Slider"\n          min="0"\n          max="50"\n          value="45"\n          step="1">\n    </c3m-slider>\n\n    <p><strong>title</strong> for rename the label tag</p>\n    <p><strong>min</strong> for choose the minimum value</p>\n    <p><strong>max</strong> for choose the maximum value</p>\n    <p><strong>step</strong> for choose the step value (Integer or Float)</p>\n    <p><strong>value</strong> for choose the default value</p>\n\n\n    \x3c!-- TABS SNIPPETS --\x3e\n    <c3m-tabs>\n      <c3m-tab tabTitle="HTML">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n           \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                 &#x3C;!-- SIMPLE SLIDER --&#x3E;\n                    &#x3C;c3m-slider\n                          title=&#x22;Simple Slider&#x22;\n                          min=&#x22;0&#x22;\n                          max=&#x22;50&#x22;\n                          value=&#x22;45&#x22;\n                          step=&#x22;1&#x22;&#x3E;\n                    &#x3C;/c3m-slider&#x3E;\n              </code>\n            </pre>\n        </div>\n\n          <p class="pre-code"> For <strong>slider-page.component.html</strong> </p>\n        <div class="code">\n            \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                &#x3C;div class=&#x22;SliderContent&#x22;&#x3E;\n                    &#x3C;label for=&#x22;sliderBar&#x22; &#x3E; &#123; &#123; this.title &#125;&#125; &#x3C;/label&#x3E;\n                    &#x3C;input type=&#x22;range&#x22; #slider id=&#x22;sliderBar&#x22; [attr.min]=&#x22;min&#x22; [attr.max]=&#x22;max&#x22; [attr.step]=&#x22;step&#x22; [attr.value]=&#x22;value&#x22; (input)=&#x22;showValue();&#x22;/&#x3E;\n                    &#x3C;output for=&#x22;sliderBar&#x22; #output&#x3E; &#123; &#123; this.value &#125; &#125; &#x3C; /output&#x3E;\n                &#x3C;/div&#x3E;\n              </code>\n            </pre>\n        </div>\n\n\n      </c3m-tab>\n      <c3m-tab tabTitle="CSS">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n              \x3c!--?prettify lang=css linenums=true?--\x3e\n              <pre class="prettyprint linenums">\n              <code>\n                /* INPUT CSS */\n                c3m-slider input[type=range] &#123;\n                    -webkit-appearance: none;\n                    width: 30%;\n                    margin: 8.8px 0;\n                    display:inline-block;\n                &#123;\n                    c3m-slider input[type=range]:focus &#123;\n                        outline: none;\n                    &#123;\n                        c3m-slider input[type=range]::-webkit-slider-runnable-track &#123;\n                            width: 100%;\n                            height: 8.4px;\n                            cursor: pointer;\n                            box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n                            background: #bdbdbd;\n                            border-radius: 1.3px;\n                            border: 0.2px solid #010101;\n                        &#123;\n                            c3m-slider input[type=range]::-webkit-slider-thumb &#123;\n                                box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.63), 0px 0px 0px rgba(13, 13, 13, 0.63);\n                                border: 1px solid rgba(0, 0, 0, 0.28);\n                                height: 26px;\n                                width: 26px;\n                                border-radius: 12px;\n                                background: rgba(105, 105, 105, 0.97);\n                                cursor: pointer;\n                                -webkit-appearance: none;\n                                margin-top: -9px;\n                            &#123;\n                                c3m-slider input[type=range]:focus::-webkit-slider-runnable-track &#123;\n                                    background: #c2c2c2;\n                                &#123;\n                                c3m-slider input[type=range]::-moz-range-track &#123;\n                                    width: 100%;\n                                    height: 8.4px;\n                                    cursor: pointer;\n                                    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n                                    background: #bdbdbd;\n                                    border-radius: 1.3px;\n                                    border: 0.2px solid #010101;\n                                &#123;\n                                    c3m-slider input[type=range]::-moz-range-thumb &#123;\n                                        box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.63), 0px 0px 0px rgba(13, 13, 13, 0.63);\n                                        border: 1px solid rgba(0, 0, 0, 0.28);\n                                        height: 26px;\n                                        width: 26px;\n                                        border-radius: 12px;\n                                        background: rgba(105, 105, 105, 0.97);\n                                        cursor: pointer;\n                                    &#123;\n                                        input[type=range]::-ms-track &#123;\n                                            width: 100%;\n                                            height: 8.4px;\n                                            cursor: pointer;\n                                            background: transparent;\n                                            border-color: transparent;\n                                            color: transparent;\n                                        &#123;\n                                        c3m-slider input[type=range]::-ms-fill-lower &#123;\n                                            background: #b8b8b8;\n                                            border: 0.2px solid #010101;\n                                            border-radius: 2.6px;\n                                            box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n                                        &#123;\n                                        c3m-slider input[type=range]::-ms-fill-upper &#123;\n                                            background: #bdbdbd;\n                                            border: 0.2px solid #010101;\n                                            border-radius: 2.6px;\n                                            box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n                                        &#123;\n                                            c3m-slider input[type=range]::-ms-thumb &#123;\n                                                box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.63), 0px 0px 0px rgba(13, 13, 13, 0.63);\n                                                border: 1px solid rgba(0, 0, 0, 0.28);\n                                                height: 26px;\n                                                width: 26px;\n                                                border-radius: 12px;\n                                                background: rgba(105, 105, 105, 0.97);\n                                                cursor: pointer;\n                                                height: 8.4px;\n                                            &#123;\n                                            c3m-slider input[type=range]:focus::-ms-fill-lower &#123;\n                                                background: #bdbdbd;\n                                            &#123;\n                                            c3m-slider input[type=range]:focus::-ms-fill-upper &#123;\n                                                background: #c2c2c2;\n                                            &#123;\n                 /* Label */\n                c3m-slider label&#123;\n                    display: block;\n                    margin: 0.6rem 0;\n                    font-size: 1.1rem;\n                    text-transform: uppercase;\n                    color: #5d5555;\n                &#123;\n\n                /* Output */\n                c3m-slider output&#123;\n                    display: inline;\n                    position: static;\n                    font: 1.3rem &#x22;rotoboregular&#x22;;\n                    margin-left: 0.9rem;\n                    vertical-align: middle;\n                    text-transform: uppercase;\n                &#123;\n                    c3m-slider.bubble output &#123;\n                        position: absolute;\n                        background-color: dimgray;\n                        width: 40px;\n                        height: 30px;\n                        text-align: center;\n                        color: white;\n                        border-radius: 10px;\n                        display: inline-block;\n                        bottom: -2.7rem;\n                        left: 0;\n                        margin-left:0;\n                        transform: translate(-50%);\n                    &#123;\n                        c3m-slider.bubble output:after &#123;\n                            content: &#x22;&#x22;;\n                            position: absolute;\n                            width: 0;\n                            height: 0;\n                            border-bottom: 10px solid dimgray;\n                            border-left: 5px solid transparent;\n                            border-right: 5px solid transparent;\n                            bottom: 100%;\n                            left: 50%;\n                            margin-left: -5px;\n                            margin-top: -1px;\n                        &#123;\n                c3m-slider .SliderContent&#123;\n                    position:relative;\n                    margin-bottom: 3rem;\n                &#123;\n              </code>\n            </pre>\n        </div>\n\n      </c3m-tab>\n      <c3m-tab tabTitle="TypeScript">\n          <p class="pre-code">For <strong>slider-component.ts</strong></p>\n          <div class="code">\n             \x3c!--?prettify lang=js linenums=true?--\x3e\n                <pre class="prettyprint linenums">\n                  <code>\n                    import &#123;Component, ElementRef, Input, AfterViewInit, ViewChild, ViewEncapsulation, HostListener&#125; from \'@angular/core\';\n\n                    @Component(&#123;\n                      selector: \'c3m-slider\',\n                      templateUrl: \'./slider.component.html\',\n                      styleUrls: [\'./slider.component.css\'],\n                      encapsulation: ViewEncapsulation.None\n                    &#125;)\n                    export class SliderComponent implements AfterViewInit &#123;\n\n                        @Input() min;\n                        @Input() max;\n                        @Input() step;\n                        @Input() value;\n                        @Input() title;\n\n                        @ViewChild(\'slider\') input: ElementRef;\n                        @ViewChild(\'output\') output: ElementRef;\n\n                        isBubble: boolean;\n\n                        width: number;\n                        point: number;\n                        offset = 0;\n                        newPoint;\n\n                        constructor(private myComponent: ElementRef) &#123; &#125;\n\n                       /* OnLoad */\n                      ngAfterViewInit() &#123;\n                          console.log(this.value);\n                          this.isBubble = this.myComponent.nativeElement.classList.contains(\'bubble\');\n                          if (this.isBubble) &#123;\n                              this.setPositionBubble();\n                          &#125;\n\n                      &#125;\n\n                        /* Resize breakpoint tab */\n                        @HostListener(\'window:resize\', [\'$event\'])\n                        onResize(event) &#123;\n                            if (this.isBubble) &#123;\n                                this.setPositionBubble();\n                            &#125;\n                        &#125;\n                        /* Display value */\n                        showValue() &#123;\n                          if (this.isBubble) &#123;\n                              this.setPositionBubble();\n                          &#125;\n                          this.output.nativeElement.innerHTML = this.input.nativeElement.value;\n                      &#125;\n\n                       /* Move the output with the slider */\n                        setPositionBubble() &#123;\n                            this.width = this.input.nativeElement.getBoundingClientRect().width;\n                            this.point = (this.input.nativeElement.value - this.min) / (this.max - this.min);\n\n                           if (this.point < 0.5) &#123;\n                                this.offset = ((this.point * 2) * -12) + 12;\n                           &#125; else if (this.point > 0.5) &#123;\n                               this.offset = ((this.point - 0.5) * 2) * -12;\n\n                            &#125;\n                              this.newPoint = this.width * this.point;\n                              this.output.nativeElement.style.left = this.newPoint + this.offset + \'px\';\n                      &#125;\n                    &#125;\n\n                  </code>\n                </pre>\n          </div>\n      </c3m-tab>\n    </c3m-tabs>\n\n\n  </div>\n</div>\n\n<div class="titleComponent">\n  <div class="descriptionComponent" id="bubbleSlider">\n    <h3> Bubble Slider <a href="https://github.com/CreamNG/Components/tree/master/slider" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> It\'s a slider with a BUBBLE that follow the cursor</p>\n\n    \x3c!-- SLIDER WITH BUBBLE --\x3e\n      <c3m-slider\n              title="Slider with Bubble"\n              min="0"\n              max="100"\n              value="30"\n              step="1"\n              class="bubble">\n      </c3m-slider>\n\n      <p> The same component that "normal Slider" but you can add <strong>bubble</strong> class to change the OUTPUT tag</p>\n\n      \x3c!-- BUBBLE SLIDER SNIPPETS --\x3e\n    <c3m-tabs>\n      <c3m-tab tabTitle="HTML">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n           \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                   &#x3C;c3m-slider\n                        class=&#x22;bubble&#x22;\n                        title=&#x22;Slider with bubble&#x22;&#x3E;\n                        min=&#x22;0&#x22;\n                        max=&#x22;100&#x22;\n                        value=&#x22;50&#x22;\n                        step=&#x22;1&#x22;\n                   &#x3C;/c3m-slider&#x3E;\n              </code>\n            </pre>\n        </div>\n      </c3m-tab>\n    </c3m-tabs>\n\n  </div>\n</div>\n'},function(n,t){n.exports='<div class="SliderContent">\r\n    <label for="sliderBar">{{ this.title }}</label>\r\n    <input type="range" #slider id="sliderBar" [attr.min]="min" [attr.max]="max" [attr.step]="step" [attr.value]="value" (input)="showValue();"/>\r\n    <output for="sliderBar" #output>{{ this.value }}</output>\r\n</div>\r\n\r\n\r\n'},function(n,t){n.exports='<table>\n  <caption> Responsive Table </caption>\n    <thead>\n    <tr>\n      <th scope="col">Movie Title</th>\n      <th scope="col">Time</th>\n      <th scope="col">Year</th>\n      <th scope="col">Type</th>\n      <th scope="col">Country</th>\n    </tr>\n    </thead>\n\n    <tbody>\n        <tr>\n          <td class="title"><span>Inception</span></td>\n          <td><span>148</span></td>\n          <td> <span>2010</span></td>\n          <td><span>SF</span></td>\n          <td><span>UK</span></td>\n        </tr>\n        <tr>\n          <td class="title"> <span>The dark knight</span></td>\n          <td><span>164</span></td>\n          <td><span>2012</span></td>\n          <td><span>SH</span></td>\n          <td><span>USA/UK</span></td>\n        </tr>\n        <tr>\n          <td class="title"><span>Pulp Fiction</span></td>\n          <td><span>154</span></td>\n          <td><span>1994</span></td>\n          <td><span>Gangster</span></td>\n          <td><span>USA</span></td>\n        </tr>\n    </tbody>\n</table>'},function(n,t){n.exports="<p>\n  page-swipe-table works!\n</p>\n"},function(n,t){n.exports='\x3c!-- TITLE TABLE COMPONENT PAGE --\x3e\n<div class="panelTitle">\n  <h2> <strong> Table </strong> Component </h2>\n  <ul>\n    <li><a scrollTo href="responsivRow">Responsive | Row</a></li>\n    <li><a href="#">Toggle Table</a></li>\n    <li><a href="#">Page/Swipe Table</a></li>\n  </ul>\n</div>\n\n\n\x3c!-- DESCRIPTION TABLE COMPONENT PAGE --\x3e\n<div class="titleComponent">\n  <div class="descriptionComponent" id="responsivRow">\n    <h3> Responsive | Row Table <a href="https://github.com/CreamNG/Components/tree/master/column-table" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> A Full Responsiv table that transform Column to Row</p>\n\n\n    \x3c!-- TABLE DEMO --\x3e\n    <c3m-column-table></c3m-column-table>\n\n    <p> This Table change on small devices. The <strong>THEAD</strong>disappears, and each row is divided by the\n      column number of the array, and on adds the column title at the beginning of each row</p>\n\n\n    \x3c!-- TABS SNIPPETS --\x3e\n    <c3m-tabs>\n      <c3m-tab tabTitle="HTML">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n          \x3c!--?prettify lang=html linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                      <code>\n                          &#x3C;c3m-column-table&#x3E;&#x3C;/c3m-column-table&#x3E;\n                      </code>\n                    </pre>\n        </div>\n        <p class="pre-code"> For <strong>column-table.component.html</strong> </p>\n        <div class="code">\n          \x3c!--?prettify lang=html linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                      <code>\n                          &#x3C;table&#x3E;\n                            &#x3C;caption&#x3E; Responsive Table &#x3C;/caption&#x3E;\n                              &#x3C;thead&#x3E;\n                              &#x3C;tr&#x3E;\n                                &#x3C;th scope=&#x22;col&#x22;&#x3E;Movie Title&#x3C;/th&#x3E;\n                                &#x3C;th scope=&#x22;col&#x22;&#x3E;Time&#x3C;/th&#x3E;\n                                &#x3C;th scope=&#x22;col&#x22;&#x3E;Year&#x3C;/th&#x3E;\n                                &#x3C;th scope=&#x22;col&#x22;&#x3E;Type&#x3C;/th&#x3E;\n                                &#x3C;th scope=&#x22;col&#x22;&#x3E;Country&#x3C;/th&#x3E;\n                              &#x3C;/tr&#x3E;\n                              &#x3C;/thead&#x3E;\n\n                              &#x3C;tbody&#x3E;\n                                  &#x3C;tr&#x3E;\n                                    &#x3C;td class=&#x22;title&#x22;&#x3E;&#x3C;span&#x3E;Inception&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;148&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E; &#x3C;span&#x3E;2010&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;SF&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;UK&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                  &#x3C;/tr&#x3E;\n                                  &#x3C;tr&#x3E;\n                                    &#x3C;td class=&#x22;title&#x22;&#x3E; &#x3C;span&#x3E;The dark knight&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;164&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;2012&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;SH&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;USA/UK&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                  &#x3C;/tr&#x3E;\n                                  &#x3C;tr&#x3E;\n                                    &#x3C;td class=&#x22;title&#x22;&#x3E;&#x3C;span&#x3E;Pulp Fiction&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;154&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;1994&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;Gangster&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                    &#x3C;td&#x3E;&#x3C;span&#x3E;USA&#x3C;/span&#x3E;&#x3C;/td&#x3E;\n                                  &#x3C;/tr&#x3E;\n                              &#x3C;/tbody&#x3E;\n                          &#x3C;/table&#x3E;\n                      </code>\n                    </pre>\n        </div>\n      </c3m-tab>\n      <c3m-tab tabTitle="CSS">\n        <p class="pre-code"> For <strong>To call the component</strong> </p>\n        <div class="code">\n          \x3c!--?prettify lang=css linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                      <code>\n                                 c3m-column-table table &#123;\n                                    text-align:left;\n                                    border: 1px solid #ffffff;\n                                    width:75%\n                                &#125;\n                                    c3m-column-table caption &#123;\n                                        font: 1.3rem &#x22;robotoregular&#x22;;\n                                        margin-bottom: 0.6rem;\n                                        color: #1b1b1f;\n                                        text-align: left;\n                                    &#125;\n                                        c3m-column-table thead th  &#123;\n                                            color: white;\n                                            background-color: rgb(105, 105, 105);\n                                            padding: 1rem 0.4rem;\n                                            border: 1px solid #423e3e;\n                                        &#125;\n                                            c3m-column-table tbody td  &#123;\n                                                color: black;\n                                                background-color: white;\n                                                padding: 1rem 0.4rem;\n                                                border: 1px solid #423e3e;\n                                            &#125;\n                                             c3m-column-table tbody strong &#123;\n                                                 display:none;\n                                             &#125;\n                                                c3m-column-table tfoot td  &#123;\n                                                    color: white;\n                                                    background-color: #565658;\n                                                    padding: 1rem 0.4rem;\n                                                    border: 1px solid #423e3e;\n                                                &#125;\n                                @media screen and (max-width: 1000px) &#123;\n\n                                    c3m-column-table table  &#123;\n                                        border:none;\n                                        width: 100%;\n                                        display:block;\n                                        padding:0.5rem;\n                                        border-radius:3px;\n                                        background-color: white;\n                                    &#125;\n                                    c3m-column-table tbody &#123;\n                                        display:block;\n                                        width:100%;\n                                    &#125;\n                                    c3m-column-table thead &#123;\n                                        display:none;\n                                    &#125;\n                                        c3m-column-table tbody tr &#123;\n                                            display: block;\n                                            width: 100%;\n                                            margin-bottom: 1.9rem;\n                                        &#125;\n                                            c3m-column-table tbody tr td &#123;\n                                                display:block;\n                                                width:100%;\n                                                color: #353232;\n                                                background-color: initial;\n                                                padding: 0.3rem 0.4rem;\n                                                border: none;\n                                                border-bottom: 1px solid #b1abab8a;\n                                            &#125;\n                                                c3m-column-table tbody strong &#123;\n                                                    display: inline-block;\n                                                    color: rgb(105, 105, 105);\n                                                    width: 30%;\n                                                    font-weight: bold;\n                                                    font-size: 1.1rem;\n                                                &#125;\n                                                        c3m-column-table tbody span &#123;\n                                                            display: inline-block;\n                                                            width:60%;\n                                                        &#125;\n                                                            c3m-column-table caption &#123;\n                                                                display: block;\n                                                                width: 100%;\n                                                                font-size: 1.5rem;\n                                                                color: #1385c5;\n                                                            &#125;\n                                \n                                &#125;\n\n                      </code>\n                    </pre>\n        </div>\n      </c3m-tab>\n\n      <c3m-tab tabTitle="TypeScript">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n          \x3c!--?prettify lang=javascript linenums=true?--\x3e\n          <pre class="prettyprint linenums">\n                      <code>\n                         import &#123;Component, ViewEncapsulation, AfterViewInit&#125; from &#x27;@angular/core&#x27;;\n\n                          @Component(&#123;\n                            selector: &#x27;c3m-column-table&#x27;,\n                            templateUrl: &#x27;./column-table.component.html&#x27;,\n                            styleUrls: [&#x27;./column-table.component.css&#x27;],\n                            encapsulation: ViewEncapsulation.None\n                          &#125;)\n                          export class ColumnTableComponent implements AfterViewInit &#123;\n\n                            constructor() &#123; &#125;\n\n                            ngAfterViewInit() &#123;\n                              const heads = document.querySelectorAll(&#x27;thead th&#x27;);\n                              const titles = [];\n                              for ( let x = 0; x &#x3C; heads.length ; x++) &#123;\n                                titles.push(heads[x].innerHTML);\n                              &#125;\n\n                              const bodyTr = document.querySelectorAll(&#x27;tbody tr&#x27;);\n\n                              for ( let i = 0; i &#x3C; bodyTr.length; i++) &#123;\n                                  const bodyTrTd = bodyTr[i].querySelectorAll(&#x27;td&#x27;);\n                                  for ( let j = 0; j &#x3C; bodyTrTd.length; j++) &#123;\n\n                                      const strong = document.createElement(&#x27;strong&#x27;);\n                                      const title = document.createTextNode(titles[j]);\n                                      strong.appendChild(title);\n                                      bodyTrTd[j].insertBefore(strong, bodyTrTd[j].childNodes[0]);\n                                  &#125;\n                              &#125;\n                            &#125;\n                          &#125;\n\n                      </code>\n                    </pre>\n        </div>\n\n      </c3m-tab>\n    </c3m-tabs>\n\n  </div>\n</div>\n\n'},function(n,t){n.exports="<p>\n  toggle-table works!\n</p>\n"},function(n,t){n.exports='\n\x3c!-- TITLE TABS COMPONENT PAGE --\x3e\n<div class="panelTitle">\n  <h2> <strong> Tabs </strong> Component </h2>\n  <ul>\n    <li><a href="#">Normal Tabs</a></li>\n  </ul>\n</div>\n\n\n\x3c!-- DESCRIPTION TABS COMPONENT PAGE --\x3e\n<div class="titleComponent">\n  <div class="descriptionComponent" id="nrmTabs">\n    <h3> Normal Tabs <a href="https://github.com/CreamNG/Components/tree/master/tabs" class="gitBtn" target="_blank"><img src="assets/img/github-box.svg" alt="download on github"><span>Github</span></a> </h3>\n    <p> Its\' a tabs divided into 2 components: one for the container (TabsComponent) and the other for the content (TabComponent)</p>\n\n\n    \x3c!-- TABS DEMO --\x3e\n    <c3m-tabs class="presentationTabV">\n      <c3m-tab tabTitle="Title1">\n        Content 1\n      </c3m-tab>\n      <c3m-tab tabTitle="Title2">\n        Content 2\n      </c3m-tab>\n      <c3m-tab tabTitle="Title3">\n        Content 3\n      </c3m-tab>\n      <c3m-tab tabTitle="Title4">\n        Content 4\n      </c3m-tab>\n    </c3m-tabs>\n\n\n    <p> This component is accessible and semantic.\n    The css provides for cases where the width of the\n    tab is greater than the width of the page. It is possible\n    to change the default open tab with the viable startIndexActiv\n    in tabs.component.ts</p>\n\n\n\n    \x3c!-- TABS SNIPPETS --\x3e\n    <c3m-tabs>\n      <c3m-tab tabTitle="HTML">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n           \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                  &#x3C;c3m-tabs &#x3E;\n                      &#x3C;c3m-tab tabTitle=&#x22;Title1&#x22;&#x3E;\n                          Content 1\n                      &#x3C;/c3m-tab&#x3E;\n                      &#x3C;c3m-tab tabTitle=&#x22;Title2&#x22;&#x3E;\n                          Content 2\n                      &#x3C;/c3m-tab&#x3E;\n                      &#x3C;c3m-tab tabTitle=&#x22;Title3&#x22;&#x3E;\n                          Content 3\n                      &#x3C;/c3m-tab&#x3E;\n                      &#x3C;c3m-tab tabTitle=&#x22;Title4&#x22;&#x3E;\n                          Content 4\n                      &#x3C;/c3m-tab&#x3E;\n                  &#x3C;/c3m-tabs&#x3E;\n              </code>\n            </pre>\n        </div>\n        <p class="pre-code"> For <strong>tabs.component.html</strong> </p>\n        <div class="code">\n            \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                  &#x3C;div class=&#x22;tabsContainer&#x22;&#x3E;\n                    &#x3C;ul&#x3E;\n                          &#x3C;li #tabs *ngFor=&#x22;let tab of tabs&#x22;\n                              (click)=&#x22;selectTab(tab)&#x22;\n                              [ngClass]=&#x22;&#123;active: tab.isActive, over: isOver&#125;&#x22;\n                              [attr.aria-expanded]=&#x22;tab.isActive&#x22;\n                              [attr.aria-controls]=&#x22;tab.panelID&#x22;\n                              [attr.aria-selected]=&#x22;tab.isActive&#x22;\n                              id= &#123; &#123; tab.tabID &#125; &#125; &#x3E;\n\n                            &#x3C;button &#x3E; &#123; &#123; tab.tabTitle &#125;&#125; &#x3C;/button&#x3E;\n                          &#x3C;/li&#x3E;\n                    &#x3C;/ul&#x3E;\n\n                    &#x3C;ng-content&#x3E; &#x3C;/ng-content&#x3E;\n                  &#x3C;/div&#x3E;\n              </code>\n            </pre>\n        </div>\n          <p class="pre-code"> For <strong>tab.component.html</strong> </p>\n        <div class="code">\n            \x3c!--?prettify lang=html linenums=true?--\x3e\n            <pre class="prettyprint linenums">\n              <code>\n                      &#x3C;div class=&#x22;content&#x22;\n                            [attr.aria-hidden]=&#x22;!isActive&#x22;\n                            [attr.aria-labeledby]=&#x22;tabID&#x22;\n                            id= &#123; &#123; panelID &#125;&#125; &#x3E;\n                            &#x3C;ng-content&#x3E;&#x3C;/ng-content&#x3E;\n                      &#x3C;/div&#x3E;\n              </code>\n            </pre>\n        </div>\n\n\n      </c3m-tab>\n      <c3m-tab tabTitle="CSS">\n        <p class="pre-code"> To call the component </p>\n        <div class="code">\n              \x3c!--?prettify lang=css linenums=true?--\x3e\n              <pre class="prettyprint linenums">\n              <code>\n\n                  /* GESTION DES SNIPPETS */\n\n                .tabsContainer &#123;\n                    background-color: transparent;\n                    margin-top: 2rem;\n                    box-shadow: 0px 7px 5px -4px rgba(50, 50, 50, 0.62)\n                   &#125;\n\n                    .tabsContainer ul &#x3E; li &#123;\n                      display: inline-block;\n                      padding: 0 1em;\n                      text-align: center;\n                      font: 0.9rem &#x22;robotoblack&#x22;;\n                      background-color: rgba(152, 142, 128, 0.31);\n                      margin-right: 0.4rem;\n                     &#125;\n                    .tabsContainer &#x3E; ul &#x3E; li.active &#123;\n                      background-color: rgba(218, 218, 218, 0.68);\n                     &#125;\n\n                    .tabsContainer &#x3E; ul &#x3E; li button  &#123;\n                       padding: 0.5rem 1.3rem;\n                        width: 100%;\n                        background-color: initial;\n                        color:black;\n                        cursor:pointer;\n                        font: 1.1rem"robotolight";\n                     &#125;\n                        c3m-tab .content[aria-hidden=&#x22;false&#x22;] &#123;\n                          padding: 1rem;\n                          background-color: rgba(218, 218, 218, 0.68);\n                          padding-top: 2.2rem;\n                          font: 1rem &#x22;robotolight&#x22;;\n                         &#125;\n                          c3m-tab .content[aria-hidden=&#x22;true&#x22;] &#123;\n                            display: none;\n                           &#125;\n                            .tabsContainer ul &#x3E; li.over &#123;\n                              display:block;\n                              width:100%;\n                              border-bottom: 1px solid white;\n                             &#125;\n\n                @media screen and (min-width:850px) &#123;\n\n                  .tabsContainer &#x3E; ul &#x3E; li &#123;\n                      font-size: 1.2rem;\n\n                     &#125;\n                 &#125;\n\n              </code>\n            </pre>\n        </div>\n\n      </c3m-tab>\n      <c3m-tab tabTitle="TypeScript">\n        <p class="pre-code">For <strong>tabs-page.component.ts</strong></p>\n          <div class="code">\n              \x3c!--?prettify lang=js linenums=true?--\x3e\n              <pre class="prettyprint linenums">\n                  <code>\n                      import &#123; Component, ViewEncapsulation, Input, ElementRef, AfterViewInit, ViewChildren, QueryList, ChangeDetectorRef, HostListener &#125; from &#x27;@angular/core&#x27;;\n                      import &#123; TabComponent &#125; from &#x27;./tab/tab.component&#x27;;\n\n                      @Component(&#123;\n                        selector: &#x27;-tabs&#x27;,\n                        templateUrl: &#x27;./tabs.component.html&#x27;,\n                        styleUrls: [&#x27;./tabs.component.css&#x27;],\n                        encapsulation: ViewEncapsulation.None\n                      &#125;)\n                      export class TabsComponent implements AfterViewInit &#123;\n\n                        @ViewChildren(&#x27;tabs&#x27;) tabsElement: QueryList&#x3C;ElementRef&#x3E;;\n\n                        tabs: TabComponent[] = [];\n                        isOver: boolean;\n                        widthBreak: number;\n                        sizeInit = 0;\n                        arrayTmp: ElementRef[] = [];\n\n                        /* Managing resize for tab breakpoint */\n                        @HostListener(&#x27;window:resize&#x27;, [&#x27;$event&#x27;])\n                        onResize(event) &#123;\n                          if ( this.tabsElement.last.nativeElement.offsetTop &#x3E; this.tabsElement.first.nativeElement.offsetTop ) &#123;\n\n                                    if ( (this.tabsElement.last.nativeElement.offsetTop &#x3E; this.tabsElement.first.nativeElement.offsetTop) &#x26;&#x26;  (this.isOver !== true) ) &#123;\n                                        this.widthBreak = event.target.innerWidth;\n                                        this.isOver = true;\n                                    &#125;\n\n                                    if (this.widthBreak) &#123;\n                                          if ( (event.target.innerWidth &#x3E; this.widthBreak) &#x26;&#x26; (this.isOver === true) ) &#123;\n                                          this.isOver = false;\n                                          &#125;\n\n                                    &#125; else &#123;\n                                          this.widthBreak = this.sizeInit;\n                                            if ( event.target.innerWidth &#x3E;= this.widthBreak ) &#123;\n                                              this.isOver = false;\n                                            &#125;\n                                    &#125;\n                          &#125; else &#123;\n                            this.isOver = false;\n                          &#125;\n                          this.cdr.detectChanges();\n                        &#125;\n\n                        /* Adding a Tab to the Tab Table and Selecting the Current Tab */\n                        addTab(tab: TabComponent) &#123;\n                          if (this.tabs.length === 0) &#123;\n                            tab.isActive = true;\n                          &#125;\n                          this.tabs.push(tab);\n                        &#125;\n\n                        /* Closing tabs and opening the current Tab */\n                        selectTab(tab: TabComponent) &#123;\n                          this.tabs.forEach((TabComponent) =&#x3E; &#123;\n                            TabComponent.isActive = false;\n                          &#125;);\n                          tab.isActive = true;\n                          &#125;\n\n                        /* Tab breakpoint management */\n                        ngAfterViewInit(): void &#123;\n\n                          this.arrayTmp = this.tabsElement.toArray();\n                          for ( let i = 0; i &#x3C; this.arrayTmp.length - 1; i ++ ) &#123;\n                              this.sizeInit = this.arrayTmp[i].nativeElement.clientWidth + this.sizeInit;\n                          &#125;\n\n                          if ( this.tabsElement.last.nativeElement.offsetTop !== this.tabsElement.first.nativeElement.offsetTop ) &#123;\n                            this.isOver = true;\n                          &#125; else &#123;\n                            this.isOver = false;\n                          &#125;\n                            this.cdr.detectChanges();\n                        &#125;\n\n\n                        /* Constructor */\n                        constructor(private cdr: ChangeDetectorRef) &#123;\n                        &#125;\n\n                      &#125;\n\n\n                </code>\n              </pre>\n          </div>\n\n          <p class="pre-code">For <strong>tab-page.component.ts</strong></p>\n          <div class="code">\n             \x3c!--?prettify lang=js linenums=true?--\x3e\n                        <pre class="prettyprint linenums">\n                          <code>\n                                import &#123; Component, OnInit, ViewEncapsulation, Input, AfterViewInit&#125; from &#x27;@angular/core&#x27;;\n                                import &#123; TabsComponent &#125; from &#x27;../tabs.component&#x27;;\n                                import &#123; AppComponent &#125; from &#x27;../../../../app.component&#x27;;\n\n                                @Component(&#123;\n                                  selector: &#x27;c3m-tab&#x27;,\n                                  templateUrl: &#x27;./tab.component.html&#x27;,\n                                  styleUrls: [&#x27;./tab.component.css&#x27;],\n                                  encapsulation: ViewEncapsulation.None\n                                &#125;)\n                                export class TabComponent implements OnInit, AfterViewInit &#123;\n\n                                  @Input() tabTitle;\n                                  @Input() isActive: boolean;\n                                  @Input() idTab: number;\n                                  tabID: string;\n                                  panelID: string;\n\n                                  constructor(tabs: TabsComponent, : AppComponent) &#123;\n                                    tabs.addTab(this);\n                                    this.idTab = app.randomID();\n                                  &#125;\n\n                                  ngOnInit() &#123;\n                                    this.tabID = &#x27;tab&#x27; + this.idTab;\n                                    this.panelID = &#x27;panel&#x27; + this.idTab;\n                                  &#125;\n\n                                  ngAfterViewInit() &#123;\n                                    this.tabID = &#x27;tab&#x27; + this.idTab;\n                                    this.panelID = &#x27;panel&#x27; + this.idTab;\n\n                                  &#125;\n                                &#125;\n                          </code>\n                        </pre>\n          </div>\n\n          <p class="pre-code">It\'s the <strong> Random Function </strong> that generates id automatically for "aria" and "id" attributes <strong> in the AppComponent </strong> for example</p>\n          <div class="code">\n             \x3c!--?prettify lang=js linenums=true?--\x3e\n              <pre class="prettyprint linenums">\n                    <code>\n                        public randomID() &#123;\n                          const idRandom = Math.round(Math.random() * (20000 - 1) + 1);\n                          return idRandom;\n                        &#125;\n                    </code>\n              </pre>\n          </div>\n      </c3m-tab>\n    </c3m-tabs>\n\n  </div>\n\n</div>\n'},function(n,t){n.exports=' <div class="content"\n      [attr.aria-hidden]="!isActive"\n      [attr.aria-labeledby]="tabID"\n      id={{panelID}}>\n      <ng-content></ng-content>\n </div>\n'},function(n,t){n.exports='<div class="tabsContainer">\n  <ul>\n        <li #tabs *ngFor="let tab of tabs"\n            (click)="selectTab(tab)"\n            [ngClass]="{active: tab.isActive, over: isOver}"\n            [attr.aria-expanded]="tab.isActive"\n            [attr.aria-controls]="tab.panelID"\n            [attr.aria-selected]="tab.isActive"\n            id={{tab.tabID}}>\n\n          <button> {{ tab.tabTitle }} </button>\n        </li>\n  </ul>\n\n  <ng-content></ng-content>\n</div>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(n,t,e){n.exports=e(94)}]),[287]);